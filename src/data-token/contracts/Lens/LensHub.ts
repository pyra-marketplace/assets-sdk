/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../common";

export declare namespace Types {
  export type MigrationParamsStruct = {
    lensHandlesAddress: string;
    tokenHandleRegistryAddress: string;
    legacyFeeFollowModule: string;
    legacyProfileFollowModule: string;
    newFeeFollowModule: string;
  };

  export type MigrationParamsStructOutput = [
    string,
    string,
    string,
    string,
    string
  ] & {
    lensHandlesAddress: string;
    tokenHandleRegistryAddress: string;
    legacyFeeFollowModule: string;
    legacyProfileFollowModule: string;
    newFeeFollowModule: string;
  };

  export type PublicationActionParamsStruct = {
    publicationActedProfileId: BigNumberish;
    publicationActedId: BigNumberish;
    actorProfileId: BigNumberish;
    referrerProfileIds: BigNumberish[];
    referrerPubIds: BigNumberish[];
    actionModuleAddress: string;
    actionModuleData: BytesLike;
  };

  export type PublicationActionParamsStructOutput = [
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber[],
    BigNumber[],
    string,
    string
  ] & {
    publicationActedProfileId: BigNumber;
    publicationActedId: BigNumber;
    actorProfileId: BigNumber;
    referrerProfileIds: BigNumber[];
    referrerPubIds: BigNumber[];
    actionModuleAddress: string;
    actionModuleData: string;
  };

  export type EIP712SignatureStruct = {
    signer: string;
    v: BigNumberish;
    r: BytesLike;
    s: BytesLike;
    deadline: BigNumberish;
  };

  export type EIP712SignatureStructOutput = [
    string,
    number,
    string,
    string,
    BigNumber
  ] & { signer: string; v: number; r: string; s: string; deadline: BigNumber };

  export type LegacyCollectParamsStruct = {
    publicationCollectedProfileId: BigNumberish;
    publicationCollectedId: BigNumberish;
    collectorProfileId: BigNumberish;
    referrerProfileId: BigNumberish;
    referrerPubId: BigNumberish;
    collectModuleData: BytesLike;
  };

  export type LegacyCollectParamsStructOutput = [
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    string
  ] & {
    publicationCollectedProfileId: BigNumber;
    publicationCollectedId: BigNumber;
    collectorProfileId: BigNumber;
    referrerProfileId: BigNumber;
    referrerPubId: BigNumber;
    collectModuleData: string;
  };

  export type CommentParamsStruct = {
    profileId: BigNumberish;
    contentURI: string;
    pointedProfileId: BigNumberish;
    pointedPubId: BigNumberish;
    referrerProfileIds: BigNumberish[];
    referrerPubIds: BigNumberish[];
    referenceModuleData: BytesLike;
    actionModules: string[];
    actionModulesInitDatas: BytesLike[];
    referenceModule: string;
    referenceModuleInitData: BytesLike;
  };

  export type CommentParamsStructOutput = [
    BigNumber,
    string,
    BigNumber,
    BigNumber,
    BigNumber[],
    BigNumber[],
    string,
    string[],
    string[],
    string,
    string
  ] & {
    profileId: BigNumber;
    contentURI: string;
    pointedProfileId: BigNumber;
    pointedPubId: BigNumber;
    referrerProfileIds: BigNumber[];
    referrerPubIds: BigNumber[];
    referenceModuleData: string;
    actionModules: string[];
    actionModulesInitDatas: string[];
    referenceModule: string;
    referenceModuleInitData: string;
  };

  export type CreateProfileParamsStruct = {
    to: string;
    followModule: string;
    followModuleInitData: BytesLike;
  };

  export type CreateProfileParamsStructOutput = [string, string, string] & {
    to: string;
    followModule: string;
    followModuleInitData: string;
  };

  export type ProfileStruct = {
    pubCount: BigNumberish;
    followModule: string;
    followNFT: string;
    __DEPRECATED__handle: string;
    __DEPRECATED__imageURI: string;
    __DEPRECATED__followNFTURI: string;
    metadataURI: string;
  };

  export type ProfileStructOutput = [
    BigNumber,
    string,
    string,
    string,
    string,
    string,
    string
  ] & {
    pubCount: BigNumber;
    followModule: string;
    followNFT: string;
    __DEPRECATED__handle: string;
    __DEPRECATED__imageURI: string;
    __DEPRECATED__followNFTURI: string;
    metadataURI: string;
  };

  export type PublicationMemoryStruct = {
    pointedProfileId: BigNumberish;
    pointedPubId: BigNumberish;
    contentURI: string;
    referenceModule: string;
    __DEPRECATED__collectModule: string;
    __DEPRECATED__collectNFT: string;
    pubType: BigNumberish;
    rootProfileId: BigNumberish;
    rootPubId: BigNumberish;
  };

  export type PublicationMemoryStructOutput = [
    BigNumber,
    BigNumber,
    string,
    string,
    string,
    string,
    number,
    BigNumber,
    BigNumber
  ] & {
    pointedProfileId: BigNumber;
    pointedPubId: BigNumber;
    contentURI: string;
    referenceModule: string;
    __DEPRECATED__collectModule: string;
    __DEPRECATED__collectNFT: string;
    pubType: number;
    rootProfileId: BigNumber;
    rootPubId: BigNumber;
  };

  export type MirrorParamsStruct = {
    profileId: BigNumberish;
    metadataURI: string;
    pointedProfileId: BigNumberish;
    pointedPubId: BigNumberish;
    referrerProfileIds: BigNumberish[];
    referrerPubIds: BigNumberish[];
    referenceModuleData: BytesLike;
  };

  export type MirrorParamsStructOutput = [
    BigNumber,
    string,
    BigNumber,
    BigNumber,
    BigNumber[],
    BigNumber[],
    string
  ] & {
    profileId: BigNumber;
    metadataURI: string;
    pointedProfileId: BigNumber;
    pointedPubId: BigNumber;
    referrerProfileIds: BigNumber[];
    referrerPubIds: BigNumber[];
    referenceModuleData: string;
  };

  export type PostParamsStruct = {
    profileId: BigNumberish;
    contentURI: string;
    actionModules: string[];
    actionModulesInitDatas: BytesLike[];
    referenceModule: string;
    referenceModuleInitData: BytesLike;
  };

  export type PostParamsStructOutput = [
    BigNumber,
    string,
    string[],
    string[],
    string,
    string
  ] & {
    profileId: BigNumber;
    contentURI: string;
    actionModules: string[];
    actionModulesInitDatas: string[];
    referenceModule: string;
    referenceModuleInitData: string;
  };

  export type QuoteParamsStruct = {
    profileId: BigNumberish;
    contentURI: string;
    pointedProfileId: BigNumberish;
    pointedPubId: BigNumberish;
    referrerProfileIds: BigNumberish[];
    referrerPubIds: BigNumberish[];
    referenceModuleData: BytesLike;
    actionModules: string[];
    actionModulesInitDatas: BytesLike[];
    referenceModule: string;
    referenceModuleInitData: BytesLike;
  };

  export type QuoteParamsStructOutput = [
    BigNumber,
    string,
    BigNumber,
    BigNumber,
    BigNumber[],
    BigNumber[],
    string,
    string[],
    string[],
    string,
    string
  ] & {
    profileId: BigNumber;
    contentURI: string;
    pointedProfileId: BigNumber;
    pointedPubId: BigNumber;
    referrerProfileIds: BigNumber[];
    referrerPubIds: BigNumber[];
    referenceModuleData: string;
    actionModules: string[];
    actionModulesInitDatas: string[];
    referenceModule: string;
    referenceModuleInitData: string;
  };

  export type TokenDataStruct = { owner: string; mintTimestamp: BigNumberish };

  export type TokenDataStructOutput = [string, BigNumber] & {
    owner: string;
    mintTimestamp: BigNumber;
  };
}

export interface LensHubInterface extends utils.Interface {
  functions: {
    "DANGER__disableTokenGuardian()": FunctionFragment;
    "TOKEN_GUARDIAN_COOLDOWN()": FunctionFragment;
    "act((uint256,uint256,uint256,uint256[],uint256[],address,bytes))": FunctionFragment;
    "actWithSig((uint256,uint256,uint256,uint256[],uint256[],address,bytes),(address,uint8,bytes32,bytes32,uint256))": FunctionFragment;
    "approve(address,uint256)": FunctionFragment;
    "balanceOf(address)": FunctionFragment;
    "batchMigrateFollowModules(uint256[])": FunctionFragment;
    "batchMigrateFollowers(uint256[],uint256,uint256[])": FunctionFragment;
    "batchMigrateFollows(uint256,uint256[],uint256[])": FunctionFragment;
    "batchMigrateProfiles(uint256[])": FunctionFragment;
    "burn(uint256)": FunctionFragment;
    "changeDelegatedExecutorsConfig(uint256,address[],bool[],uint64,bool)": FunctionFragment;
    "changeDelegatedExecutorsConfig(uint256,address[],bool[])": FunctionFragment;
    "changeDelegatedExecutorsConfigWithSig(uint256,address[],bool[],uint64,bool,(address,uint8,bytes32,bytes32,uint256))": FunctionFragment;
    "collectLegacy((uint256,uint256,uint256,uint256,uint256,bytes))": FunctionFragment;
    "collectLegacyWithSig((uint256,uint256,uint256,uint256,uint256,bytes),(address,uint8,bytes32,bytes32,uint256))": FunctionFragment;
    "comment((uint256,string,uint256,uint256,uint256[],uint256[],bytes,address[],bytes[],address,bytes))": FunctionFragment;
    "commentWithSig((uint256,string,uint256,uint256,uint256[],uint256[],bytes,address[],bytes[],address,bytes),(address,uint8,bytes32,bytes32,uint256))": FunctionFragment;
    "createProfile((address,address,bytes))": FunctionFragment;
    "emitCollectNFTTransferEvent(uint256,uint256,uint256,address,address)": FunctionFragment;
    "emitUnfollowedEvent(uint256,uint256,address)": FunctionFragment;
    "emitVersion()": FunctionFragment;
    "enableTokenGuardian()": FunctionFragment;
    "exists(uint256)": FunctionFragment;
    "follow(uint256,uint256[],uint256[],bytes[])": FunctionFragment;
    "followWithSig(uint256,uint256[],uint256[],bytes[],(address,uint8,bytes32,bytes32,uint256))": FunctionFragment;
    "getApproved(uint256)": FunctionFragment;
    "getContentURI(uint256,uint256)": FunctionFragment;
    "getDelegatedExecutorsConfigNumber(uint256)": FunctionFragment;
    "getDelegatedExecutorsMaxConfigNumberSet(uint256)": FunctionFragment;
    "getDelegatedExecutorsPrevConfigNumber(uint256)": FunctionFragment;
    "getDomainSeparator()": FunctionFragment;
    "getFollowNFTImpl()": FunctionFragment;
    "getGitCommit()": FunctionFragment;
    "getGovernance()": FunctionFragment;
    "getLegacyCollectNFTImpl()": FunctionFragment;
    "getModuleRegistry()": FunctionFragment;
    "getProfile(uint256)": FunctionFragment;
    "getProfileIdByHandleHash(bytes32)": FunctionFragment;
    "getPublication(uint256,uint256)": FunctionFragment;
    "getPublicationType(uint256,uint256)": FunctionFragment;
    "getState()": FunctionFragment;
    "getTokenGuardianDisablingTimestamp(address)": FunctionFragment;
    "getTreasury()": FunctionFragment;
    "getTreasuryData()": FunctionFragment;
    "getTreasuryFee()": FunctionFragment;
    "getVersion()": FunctionFragment;
    "incrementNonce(uint8)": FunctionFragment;
    "isActionModuleEnabledInPublication(uint256,uint256,address)": FunctionFragment;
    "isApprovedForAll(address,address)": FunctionFragment;
    "isBlocked(uint256,uint256)": FunctionFragment;
    "isDelegatedExecutorApproved(uint256,address)": FunctionFragment;
    "isDelegatedExecutorApproved(uint256,address,uint64)": FunctionFragment;
    "isFollowing(uint256,uint256)": FunctionFragment;
    "isProfileCreatorWhitelisted(address)": FunctionFragment;
    "mintTimestampOf(uint256)": FunctionFragment;
    "mirror((uint256,string,uint256,uint256,uint256[],uint256[],bytes))": FunctionFragment;
    "mirrorWithSig((uint256,string,uint256,uint256,uint256[],uint256[],bytes),(address,uint8,bytes32,bytes32,uint256))": FunctionFragment;
    "name()": FunctionFragment;
    "nonces(address)": FunctionFragment;
    "ownerOf(uint256)": FunctionFragment;
    "post((uint256,string,address[],bytes[],address,bytes))": FunctionFragment;
    "postWithSig((uint256,string,address[],bytes[],address,bytes),(address,uint8,bytes32,bytes32,uint256))": FunctionFragment;
    "quote((uint256,string,uint256,uint256,uint256[],uint256[],bytes,address[],bytes[],address,bytes))": FunctionFragment;
    "quoteWithSig((uint256,string,uint256,uint256,uint256[],uint256[],bytes,address[],bytes[],address,bytes),(address,uint8,bytes32,bytes32,uint256))": FunctionFragment;
    "royaltyInfo(uint256,uint256)": FunctionFragment;
    "safeTransferFrom(address,address,uint256)": FunctionFragment;
    "safeTransferFrom(address,address,uint256,bytes)": FunctionFragment;
    "setApprovalForAll(address,bool)": FunctionFragment;
    "setBlockStatus(uint256,uint256[],bool[])": FunctionFragment;
    "setBlockStatusWithSig(uint256,uint256[],bool[],(address,uint8,bytes32,bytes32,uint256))": FunctionFragment;
    "setEmergencyAdmin(address)": FunctionFragment;
    "setFollowModule(uint256,address,bytes)": FunctionFragment;
    "setFollowModuleWithSig(uint256,address,bytes,(address,uint8,bytes32,bytes32,uint256))": FunctionFragment;
    "setGovernance(address)": FunctionFragment;
    "setMigrationAdmins(address[],bool)": FunctionFragment;
    "setProfileMetadataURI(uint256,string)": FunctionFragment;
    "setProfileMetadataURIWithSig(uint256,string,(address,uint8,bytes32,bytes32,uint256))": FunctionFragment;
    "setRoyalty(uint256)": FunctionFragment;
    "setState(uint8)": FunctionFragment;
    "setTreasury(address)": FunctionFragment;
    "setTreasuryFee(uint16)": FunctionFragment;
    "supportsInterface(bytes4)": FunctionFragment;
    "symbol()": FunctionFragment;
    "tokenDataOf(uint256)": FunctionFragment;
    "tokenURI(uint256)": FunctionFragment;
    "totalSupply()": FunctionFragment;
    "transferFrom(address,address,uint256)": FunctionFragment;
    "unfollow(uint256,uint256[])": FunctionFragment;
    "unfollowWithSig(uint256,uint256[],(address,uint8,bytes32,bytes32,uint256))": FunctionFragment;
    "whitelistProfileCreator(address,bool)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "DANGER__disableTokenGuardian"
      | "TOKEN_GUARDIAN_COOLDOWN"
      | "act"
      | "actWithSig"
      | "approve"
      | "balanceOf"
      | "batchMigrateFollowModules"
      | "batchMigrateFollowers"
      | "batchMigrateFollows"
      | "batchMigrateProfiles"
      | "burn"
      | "changeDelegatedExecutorsConfig(uint256,address[],bool[],uint64,bool)"
      | "changeDelegatedExecutorsConfig(uint256,address[],bool[])"
      | "changeDelegatedExecutorsConfigWithSig"
      | "collectLegacy"
      | "collectLegacyWithSig"
      | "comment"
      | "commentWithSig"
      | "createProfile"
      | "emitCollectNFTTransferEvent"
      | "emitUnfollowedEvent"
      | "emitVersion"
      | "enableTokenGuardian"
      | "exists"
      | "follow"
      | "followWithSig"
      | "getApproved"
      | "getContentURI"
      | "getDelegatedExecutorsConfigNumber"
      | "getDelegatedExecutorsMaxConfigNumberSet"
      | "getDelegatedExecutorsPrevConfigNumber"
      | "getDomainSeparator"
      | "getFollowNFTImpl"
      | "getGitCommit"
      | "getGovernance"
      | "getLegacyCollectNFTImpl"
      | "getModuleRegistry"
      | "getProfile"
      | "getProfileIdByHandleHash"
      | "getPublication"
      | "getPublicationType"
      | "getState"
      | "getTokenGuardianDisablingTimestamp"
      | "getTreasury"
      | "getTreasuryData"
      | "getTreasuryFee"
      | "getVersion"
      | "incrementNonce"
      | "isActionModuleEnabledInPublication"
      | "isApprovedForAll"
      | "isBlocked"
      | "isDelegatedExecutorApproved(uint256,address)"
      | "isDelegatedExecutorApproved(uint256,address,uint64)"
      | "isFollowing"
      | "isProfileCreatorWhitelisted"
      | "mintTimestampOf"
      | "mirror"
      | "mirrorWithSig"
      | "name"
      | "nonces"
      | "ownerOf"
      | "post"
      | "postWithSig"
      | "quote"
      | "quoteWithSig"
      | "royaltyInfo"
      | "safeTransferFrom(address,address,uint256)"
      | "safeTransferFrom(address,address,uint256,bytes)"
      | "setApprovalForAll"
      | "setBlockStatus"
      | "setBlockStatusWithSig"
      | "setEmergencyAdmin"
      | "setFollowModule"
      | "setFollowModuleWithSig"
      | "setGovernance"
      | "setMigrationAdmins"
      | "setProfileMetadataURI"
      | "setProfileMetadataURIWithSig"
      | "setRoyalty"
      | "setState"
      | "setTreasury"
      | "setTreasuryFee"
      | "supportsInterface"
      | "symbol"
      | "tokenDataOf"
      | "tokenURI"
      | "totalSupply"
      | "transferFrom"
      | "unfollow"
      | "unfollowWithSig"
      | "whitelistProfileCreator"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "DANGER__disableTokenGuardian",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "TOKEN_GUARDIAN_COOLDOWN",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "act",
    values: [Types.PublicationActionParamsStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "actWithSig",
    values: [Types.PublicationActionParamsStruct, Types.EIP712SignatureStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "approve",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "balanceOf", values: [string]): string;
  encodeFunctionData(
    functionFragment: "batchMigrateFollowModules",
    values: [BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "batchMigrateFollowers",
    values: [BigNumberish[], BigNumberish, BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "batchMigrateFollows",
    values: [BigNumberish, BigNumberish[], BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "batchMigrateProfiles",
    values: [BigNumberish[]]
  ): string;
  encodeFunctionData(functionFragment: "burn", values: [BigNumberish]): string;
  encodeFunctionData(
    functionFragment: "changeDelegatedExecutorsConfig(uint256,address[],bool[],uint64,bool)",
    values: [BigNumberish, string[], boolean[], BigNumberish, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "changeDelegatedExecutorsConfig(uint256,address[],bool[])",
    values: [BigNumberish, string[], boolean[]]
  ): string;
  encodeFunctionData(
    functionFragment: "changeDelegatedExecutorsConfigWithSig",
    values: [
      BigNumberish,
      string[],
      boolean[],
      BigNumberish,
      boolean,
      Types.EIP712SignatureStruct
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "collectLegacy",
    values: [Types.LegacyCollectParamsStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "collectLegacyWithSig",
    values: [Types.LegacyCollectParamsStruct, Types.EIP712SignatureStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "comment",
    values: [Types.CommentParamsStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "commentWithSig",
    values: [Types.CommentParamsStruct, Types.EIP712SignatureStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "createProfile",
    values: [Types.CreateProfileParamsStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "emitCollectNFTTransferEvent",
    values: [BigNumberish, BigNumberish, BigNumberish, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "emitUnfollowedEvent",
    values: [BigNumberish, BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "emitVersion",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "enableTokenGuardian",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "exists",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "follow",
    values: [BigNumberish, BigNumberish[], BigNumberish[], BytesLike[]]
  ): string;
  encodeFunctionData(
    functionFragment: "followWithSig",
    values: [
      BigNumberish,
      BigNumberish[],
      BigNumberish[],
      BytesLike[],
      Types.EIP712SignatureStruct
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "getApproved",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getContentURI",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getDelegatedExecutorsConfigNumber",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getDelegatedExecutorsMaxConfigNumberSet",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getDelegatedExecutorsPrevConfigNumber",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getDomainSeparator",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getFollowNFTImpl",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getGitCommit",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getGovernance",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getLegacyCollectNFTImpl",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getModuleRegistry",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getProfile",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getProfileIdByHandleHash",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getPublication",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getPublicationType",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "getState", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "getTokenGuardianDisablingTimestamp",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getTreasury",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getTreasuryData",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getTreasuryFee",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getVersion",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "incrementNonce",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "isActionModuleEnabledInPublication",
    values: [BigNumberish, BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "isApprovedForAll",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "isBlocked",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "isDelegatedExecutorApproved(uint256,address)",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "isDelegatedExecutorApproved(uint256,address,uint64)",
    values: [BigNumberish, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "isFollowing",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "isProfileCreatorWhitelisted",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "mintTimestampOf",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "mirror",
    values: [Types.MirrorParamsStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "mirrorWithSig",
    values: [Types.MirrorParamsStruct, Types.EIP712SignatureStruct]
  ): string;
  encodeFunctionData(functionFragment: "name", values?: undefined): string;
  encodeFunctionData(functionFragment: "nonces", values: [string]): string;
  encodeFunctionData(
    functionFragment: "ownerOf",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "post",
    values: [Types.PostParamsStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "postWithSig",
    values: [Types.PostParamsStruct, Types.EIP712SignatureStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "quote",
    values: [Types.QuoteParamsStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "quoteWithSig",
    values: [Types.QuoteParamsStruct, Types.EIP712SignatureStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "royaltyInfo",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "safeTransferFrom(address,address,uint256)",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "safeTransferFrom(address,address,uint256,bytes)",
    values: [string, string, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "setApprovalForAll",
    values: [string, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "setBlockStatus",
    values: [BigNumberish, BigNumberish[], boolean[]]
  ): string;
  encodeFunctionData(
    functionFragment: "setBlockStatusWithSig",
    values: [
      BigNumberish,
      BigNumberish[],
      boolean[],
      Types.EIP712SignatureStruct
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "setEmergencyAdmin",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setFollowModule",
    values: [BigNumberish, string, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "setFollowModuleWithSig",
    values: [BigNumberish, string, BytesLike, Types.EIP712SignatureStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "setGovernance",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setMigrationAdmins",
    values: [string[], boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "setProfileMetadataURI",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "setProfileMetadataURIWithSig",
    values: [BigNumberish, string, Types.EIP712SignatureStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "setRoyalty",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setState",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "setTreasury", values: [string]): string;
  encodeFunctionData(
    functionFragment: "setTreasuryFee",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "supportsInterface",
    values: [BytesLike]
  ): string;
  encodeFunctionData(functionFragment: "symbol", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "tokenDataOf",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "tokenURI",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "totalSupply",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "transferFrom",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "unfollow",
    values: [BigNumberish, BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "unfollowWithSig",
    values: [BigNumberish, BigNumberish[], Types.EIP712SignatureStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "whitelistProfileCreator",
    values: [string, boolean]
  ): string;

  decodeFunctionResult(
    functionFragment: "DANGER__disableTokenGuardian",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "TOKEN_GUARDIAN_COOLDOWN",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "act", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "actWithSig", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "approve", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "balanceOf", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "batchMigrateFollowModules",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchMigrateFollowers",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchMigrateFollows",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchMigrateProfiles",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "burn", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "changeDelegatedExecutorsConfig(uint256,address[],bool[],uint64,bool)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "changeDelegatedExecutorsConfig(uint256,address[],bool[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "changeDelegatedExecutorsConfigWithSig",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "collectLegacy",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "collectLegacyWithSig",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "comment", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "commentWithSig",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createProfile",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "emitCollectNFTTransferEvent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "emitUnfollowedEvent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "emitVersion",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "enableTokenGuardian",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "exists", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "follow", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "followWithSig",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getApproved",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getContentURI",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDelegatedExecutorsConfigNumber",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDelegatedExecutorsMaxConfigNumberSet",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDelegatedExecutorsPrevConfigNumber",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDomainSeparator",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFollowNFTImpl",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getGitCommit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getGovernance",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getLegacyCollectNFTImpl",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getModuleRegistry",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getProfile", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getProfileIdByHandleHash",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPublication",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPublicationType",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getState", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getTokenGuardianDisablingTimestamp",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTreasury",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTreasuryData",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTreasuryFee",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getVersion", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "incrementNonce",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isActionModuleEnabledInPublication",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isApprovedForAll",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "isBlocked", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "isDelegatedExecutorApproved(uint256,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isDelegatedExecutorApproved(uint256,address,uint64)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isFollowing",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isProfileCreatorWhitelisted",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "mintTimestampOf",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "mirror", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "mirrorWithSig",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "name", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "nonces", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "ownerOf", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "post", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "postWithSig",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "quote", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "quoteWithSig",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "royaltyInfo",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "safeTransferFrom(address,address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "safeTransferFrom(address,address,uint256,bytes)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setApprovalForAll",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setBlockStatus",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setBlockStatusWithSig",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setEmergencyAdmin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setFollowModule",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setFollowModuleWithSig",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setGovernance",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setMigrationAdmins",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setProfileMetadataURI",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setProfileMetadataURIWithSig",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setRoyalty", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "setState", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setTreasury",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setTreasuryFee",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "supportsInterface",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "symbol", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "tokenDataOf",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "tokenURI", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "totalSupply",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferFrom",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "unfollow", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "unfollowWithSig",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "whitelistProfileCreator",
    data: BytesLike
  ): Result;

  events: {
    "Approval(address,address,uint256)": EventFragment;
    "ApprovalForAll(address,address,bool)": EventFragment;
    "CollectNFTTransferred(uint256,uint256,uint256,address,address,uint256)": EventFragment;
    "LensUpgradeVersion(address,string,bytes20,uint256)": EventFragment;
    "TokenGuardianStateChanged(address,bool,uint256,uint256)": EventFragment;
    "Transfer(address,address,uint256)": EventFragment;
    "TreasuryFeeSet(uint16,uint16,uint256)": EventFragment;
    "TreasurySet(address,address,uint256)": EventFragment;
    "Unfollowed(uint256,uint256,address,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "Approval"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ApprovalForAll"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "CollectNFTTransferred"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "LensUpgradeVersion"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TokenGuardianStateChanged"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Transfer"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TreasuryFeeSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TreasurySet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Unfollowed"): EventFragment;
}

export interface ApprovalEventObject {
  owner: string;
  approved: string;
  tokenId: BigNumber;
}
export type ApprovalEvent = TypedEvent<
  [string, string, BigNumber],
  ApprovalEventObject
>;

export type ApprovalEventFilter = TypedEventFilter<ApprovalEvent>;

export interface ApprovalForAllEventObject {
  owner: string;
  operator: string;
  approved: boolean;
}
export type ApprovalForAllEvent = TypedEvent<
  [string, string, boolean],
  ApprovalForAllEventObject
>;

export type ApprovalForAllEventFilter = TypedEventFilter<ApprovalForAllEvent>;

export interface CollectNFTTransferredEventObject {
  profileId: BigNumber;
  pubId: BigNumber;
  collectNFTId: BigNumber;
  from: string;
  to: string;
  timestamp: BigNumber;
}
export type CollectNFTTransferredEvent = TypedEvent<
  [BigNumber, BigNumber, BigNumber, string, string, BigNumber],
  CollectNFTTransferredEventObject
>;

export type CollectNFTTransferredEventFilter =
  TypedEventFilter<CollectNFTTransferredEvent>;

export interface LensUpgradeVersionEventObject {
  implementation: string;
  version: string;
  gitCommit: string;
  timestamp: BigNumber;
}
export type LensUpgradeVersionEvent = TypedEvent<
  [string, string, string, BigNumber],
  LensUpgradeVersionEventObject
>;

export type LensUpgradeVersionEventFilter =
  TypedEventFilter<LensUpgradeVersionEvent>;

export interface TokenGuardianStateChangedEventObject {
  wallet: string;
  enabled: boolean;
  tokenGuardianDisablingTimestamp: BigNumber;
  timestamp: BigNumber;
}
export type TokenGuardianStateChangedEvent = TypedEvent<
  [string, boolean, BigNumber, BigNumber],
  TokenGuardianStateChangedEventObject
>;

export type TokenGuardianStateChangedEventFilter =
  TypedEventFilter<TokenGuardianStateChangedEvent>;

export interface TransferEventObject {
  from: string;
  to: string;
  tokenId: BigNumber;
}
export type TransferEvent = TypedEvent<
  [string, string, BigNumber],
  TransferEventObject
>;

export type TransferEventFilter = TypedEventFilter<TransferEvent>;

export interface TreasuryFeeSetEventObject {
  prevTreasuryFee: number;
  newTreasuryFee: number;
  timestamp: BigNumber;
}
export type TreasuryFeeSetEvent = TypedEvent<
  [number, number, BigNumber],
  TreasuryFeeSetEventObject
>;

export type TreasuryFeeSetEventFilter = TypedEventFilter<TreasuryFeeSetEvent>;

export interface TreasurySetEventObject {
  prevTreasury: string;
  newTreasury: string;
  timestamp: BigNumber;
}
export type TreasurySetEvent = TypedEvent<
  [string, string, BigNumber],
  TreasurySetEventObject
>;

export type TreasurySetEventFilter = TypedEventFilter<TreasurySetEvent>;

export interface UnfollowedEventObject {
  unfollowerProfileId: BigNumber;
  idOfProfileUnfollowed: BigNumber;
  transactionExecutor: string;
  timestamp: BigNumber;
}
export type UnfollowedEvent = TypedEvent<
  [BigNumber, BigNumber, string, BigNumber],
  UnfollowedEventObject
>;

export type UnfollowedEventFilter = TypedEventFilter<UnfollowedEvent>;

export interface LensHub extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: LensHubInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    DANGER__disableTokenGuardian(
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    TOKEN_GUARDIAN_COOLDOWN(overrides?: CallOverrides): Promise<[BigNumber]>;

    act(
      publicationActionParams: Types.PublicationActionParamsStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    actWithSig(
      publicationActionParams: Types.PublicationActionParamsStruct,
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    approve(
      to: string,
      tokenId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    balanceOf(owner: string, overrides?: CallOverrides): Promise<[BigNumber]>;

    batchMigrateFollowModules(
      profileIds: BigNumberish[],
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    batchMigrateFollowers(
      followerProfileIds: BigNumberish[],
      idOfProfileFollowed: BigNumberish,
      followTokenIds: BigNumberish[],
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    batchMigrateFollows(
      followerProfileId: BigNumberish,
      idsOfProfileFollowed: BigNumberish[],
      followTokenIds: BigNumberish[],
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    batchMigrateProfiles(
      profileIds: BigNumberish[],
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    burn(
      tokenId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    "changeDelegatedExecutorsConfig(uint256,address[],bool[],uint64,bool)"(
      delegatorProfileId: BigNumberish,
      delegatedExecutors: string[],
      approvals: boolean[],
      configNumber: BigNumberish,
      switchToGivenConfig: boolean,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    "changeDelegatedExecutorsConfig(uint256,address[],bool[])"(
      delegatorProfileId: BigNumberish,
      delegatedExecutors: string[],
      approvals: boolean[],
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    changeDelegatedExecutorsConfigWithSig(
      delegatorProfileId: BigNumberish,
      delegatedExecutors: string[],
      approvals: boolean[],
      configNumber: BigNumberish,
      switchToGivenConfig: boolean,
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    collectLegacy(
      collectParams: Types.LegacyCollectParamsStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    collectLegacyWithSig(
      collectParams: Types.LegacyCollectParamsStruct,
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    comment(
      commentParams: Types.CommentParamsStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    commentWithSig(
      commentParams: Types.CommentParamsStruct,
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    createProfile(
      createProfileParams: Types.CreateProfileParamsStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    emitCollectNFTTransferEvent(
      profileId: BigNumberish,
      pubId: BigNumberish,
      collectNFTId: BigNumberish,
      from: string,
      to: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    emitUnfollowedEvent(
      unfollowerProfileId: BigNumberish,
      idOfProfileUnfollowed: BigNumberish,
      transactionExecutor: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    emitVersion(
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    enableTokenGuardian(
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    exists(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    follow(
      followerProfileId: BigNumberish,
      idsOfProfilesToFollow: BigNumberish[],
      followTokenIds: BigNumberish[],
      datas: BytesLike[],
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    followWithSig(
      followerProfileId: BigNumberish,
      idsOfProfilesToFollow: BigNumberish[],
      followTokenIds: BigNumberish[],
      datas: BytesLike[],
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    getApproved(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getContentURI(
      profileId: BigNumberish,
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getDelegatedExecutorsConfigNumber(
      delegatorProfileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getDelegatedExecutorsMaxConfigNumberSet(
      delegatorProfileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getDelegatedExecutorsPrevConfigNumber(
      delegatorProfileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getDomainSeparator(overrides?: CallOverrides): Promise<[string]>;

    getFollowNFTImpl(overrides?: CallOverrides): Promise<[string]>;

    getGitCommit(overrides?: CallOverrides): Promise<[string]>;

    getGovernance(overrides?: CallOverrides): Promise<[string]>;

    getLegacyCollectNFTImpl(overrides?: CallOverrides): Promise<[string]>;

    getModuleRegistry(overrides?: CallOverrides): Promise<[string]>;

    getProfile(
      profileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[Types.ProfileStructOutput]>;

    getProfileIdByHandleHash(
      handleHash: BytesLike,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getPublication(
      profileId: BigNumberish,
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[Types.PublicationMemoryStructOutput]>;

    getPublicationType(
      profileId: BigNumberish,
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[number]>;

    getState(overrides?: CallOverrides): Promise<[number]>;

    getTokenGuardianDisablingTimestamp(
      wallet: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getTreasury(overrides?: CallOverrides): Promise<[string]>;

    getTreasuryData(overrides?: CallOverrides): Promise<[string, number]>;

    getTreasuryFee(overrides?: CallOverrides): Promise<[number]>;

    getVersion(overrides?: CallOverrides): Promise<[string]>;

    incrementNonce(
      increment: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    isActionModuleEnabledInPublication(
      profileId: BigNumberish,
      pubId: BigNumberish,
      module: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    isApprovedForAll(
      owner: string,
      operator: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    isBlocked(
      profileId: BigNumberish,
      byProfileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "isDelegatedExecutorApproved(uint256,address)"(
      delegatorProfileId: BigNumberish,
      delegatedExecutor: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "isDelegatedExecutorApproved(uint256,address,uint64)"(
      delegatorProfileId: BigNumberish,
      delegatedExecutor: string,
      configNumber: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    isFollowing(
      followerProfileId: BigNumberish,
      followedProfileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    isProfileCreatorWhitelisted(
      profileCreator: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    mintTimestampOf(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    mirror(
      mirrorParams: Types.MirrorParamsStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    mirrorWithSig(
      mirrorParams: Types.MirrorParamsStruct,
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    name(overrides?: CallOverrides): Promise<[string]>;

    nonces(signer: string, overrides?: CallOverrides): Promise<[BigNumber]>;

    ownerOf(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    post(
      postParams: Types.PostParamsStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    postWithSig(
      postParams: Types.PostParamsStruct,
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    quote(
      quoteParams: Types.QuoteParamsStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    quoteWithSig(
      quoteParams: Types.QuoteParamsStruct,
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    royaltyInfo(
      tokenId: BigNumberish,
      salePrice: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, BigNumber]>;

    "safeTransferFrom(address,address,uint256)"(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    "safeTransferFrom(address,address,uint256,bytes)"(
      from: string,
      to: string,
      tokenId: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setApprovalForAll(
      operator: string,
      approved: boolean,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setBlockStatus(
      byProfileId: BigNumberish,
      idsOfProfilesToSetBlockStatus: BigNumberish[],
      blockStatus: boolean[],
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setBlockStatusWithSig(
      byProfileId: BigNumberish,
      idsOfProfilesToSetBlockStatus: BigNumberish[],
      blockStatus: boolean[],
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setEmergencyAdmin(
      newEmergencyAdmin: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setFollowModule(
      profileId: BigNumberish,
      followModule: string,
      followModuleInitData: BytesLike,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setFollowModuleWithSig(
      profileId: BigNumberish,
      followModule: string,
      followModuleInitData: BytesLike,
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setGovernance(
      newGovernance: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setMigrationAdmins(
      migrationAdmins: string[],
      whitelisted: boolean,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setProfileMetadataURI(
      profileId: BigNumberish,
      metadataURI: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setProfileMetadataURIWithSig(
      profileId: BigNumberish,
      metadataURI: string,
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setRoyalty(
      royaltiesInBasisPoints: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setState(
      newState: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setTreasury(
      newTreasury: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setTreasuryFee(
      newTreasuryFee: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    symbol(overrides?: CallOverrides): Promise<[string]>;

    tokenDataOf(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[Types.TokenDataStructOutput]>;

    tokenURI(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    totalSupply(overrides?: CallOverrides): Promise<[BigNumber]>;

    transferFrom(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    unfollow(
      unfollowerProfileId: BigNumberish,
      idsOfProfilesToUnfollow: BigNumberish[],
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    unfollowWithSig(
      unfollowerProfileId: BigNumberish,
      idsOfProfilesToUnfollow: BigNumberish[],
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    whitelistProfileCreator(
      profileCreator: string,
      whitelist: boolean,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;
  };

  DANGER__disableTokenGuardian(
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  TOKEN_GUARDIAN_COOLDOWN(overrides?: CallOverrides): Promise<BigNumber>;

  act(
    publicationActionParams: Types.PublicationActionParamsStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  actWithSig(
    publicationActionParams: Types.PublicationActionParamsStruct,
    signature: Types.EIP712SignatureStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  approve(
    to: string,
    tokenId: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  balanceOf(owner: string, overrides?: CallOverrides): Promise<BigNumber>;

  batchMigrateFollowModules(
    profileIds: BigNumberish[],
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  batchMigrateFollowers(
    followerProfileIds: BigNumberish[],
    idOfProfileFollowed: BigNumberish,
    followTokenIds: BigNumberish[],
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  batchMigrateFollows(
    followerProfileId: BigNumberish,
    idsOfProfileFollowed: BigNumberish[],
    followTokenIds: BigNumberish[],
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  batchMigrateProfiles(
    profileIds: BigNumberish[],
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  burn(
    tokenId: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  "changeDelegatedExecutorsConfig(uint256,address[],bool[],uint64,bool)"(
    delegatorProfileId: BigNumberish,
    delegatedExecutors: string[],
    approvals: boolean[],
    configNumber: BigNumberish,
    switchToGivenConfig: boolean,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  "changeDelegatedExecutorsConfig(uint256,address[],bool[])"(
    delegatorProfileId: BigNumberish,
    delegatedExecutors: string[],
    approvals: boolean[],
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  changeDelegatedExecutorsConfigWithSig(
    delegatorProfileId: BigNumberish,
    delegatedExecutors: string[],
    approvals: boolean[],
    configNumber: BigNumberish,
    switchToGivenConfig: boolean,
    signature: Types.EIP712SignatureStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  collectLegacy(
    collectParams: Types.LegacyCollectParamsStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  collectLegacyWithSig(
    collectParams: Types.LegacyCollectParamsStruct,
    signature: Types.EIP712SignatureStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  comment(
    commentParams: Types.CommentParamsStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  commentWithSig(
    commentParams: Types.CommentParamsStruct,
    signature: Types.EIP712SignatureStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  createProfile(
    createProfileParams: Types.CreateProfileParamsStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  emitCollectNFTTransferEvent(
    profileId: BigNumberish,
    pubId: BigNumberish,
    collectNFTId: BigNumberish,
    from: string,
    to: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  emitUnfollowedEvent(
    unfollowerProfileId: BigNumberish,
    idOfProfileUnfollowed: BigNumberish,
    transactionExecutor: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  emitVersion(
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  enableTokenGuardian(
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  exists(tokenId: BigNumberish, overrides?: CallOverrides): Promise<boolean>;

  follow(
    followerProfileId: BigNumberish,
    idsOfProfilesToFollow: BigNumberish[],
    followTokenIds: BigNumberish[],
    datas: BytesLike[],
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  followWithSig(
    followerProfileId: BigNumberish,
    idsOfProfilesToFollow: BigNumberish[],
    followTokenIds: BigNumberish[],
    datas: BytesLike[],
    signature: Types.EIP712SignatureStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  getApproved(
    tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getContentURI(
    profileId: BigNumberish,
    pubId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getDelegatedExecutorsConfigNumber(
    delegatorProfileId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getDelegatedExecutorsMaxConfigNumberSet(
    delegatorProfileId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getDelegatedExecutorsPrevConfigNumber(
    delegatorProfileId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getDomainSeparator(overrides?: CallOverrides): Promise<string>;

  getFollowNFTImpl(overrides?: CallOverrides): Promise<string>;

  getGitCommit(overrides?: CallOverrides): Promise<string>;

  getGovernance(overrides?: CallOverrides): Promise<string>;

  getLegacyCollectNFTImpl(overrides?: CallOverrides): Promise<string>;

  getModuleRegistry(overrides?: CallOverrides): Promise<string>;

  getProfile(
    profileId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<Types.ProfileStructOutput>;

  getProfileIdByHandleHash(
    handleHash: BytesLike,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getPublication(
    profileId: BigNumberish,
    pubId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<Types.PublicationMemoryStructOutput>;

  getPublicationType(
    profileId: BigNumberish,
    pubId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<number>;

  getState(overrides?: CallOverrides): Promise<number>;

  getTokenGuardianDisablingTimestamp(
    wallet: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getTreasury(overrides?: CallOverrides): Promise<string>;

  getTreasuryData(overrides?: CallOverrides): Promise<[string, number]>;

  getTreasuryFee(overrides?: CallOverrides): Promise<number>;

  getVersion(overrides?: CallOverrides): Promise<string>;

  incrementNonce(
    increment: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  isActionModuleEnabledInPublication(
    profileId: BigNumberish,
    pubId: BigNumberish,
    module: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isApprovedForAll(
    owner: string,
    operator: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isBlocked(
    profileId: BigNumberish,
    byProfileId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "isDelegatedExecutorApproved(uint256,address)"(
    delegatorProfileId: BigNumberish,
    delegatedExecutor: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "isDelegatedExecutorApproved(uint256,address,uint64)"(
    delegatorProfileId: BigNumberish,
    delegatedExecutor: string,
    configNumber: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isFollowing(
    followerProfileId: BigNumberish,
    followedProfileId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isProfileCreatorWhitelisted(
    profileCreator: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  mintTimestampOf(
    tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  mirror(
    mirrorParams: Types.MirrorParamsStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  mirrorWithSig(
    mirrorParams: Types.MirrorParamsStruct,
    signature: Types.EIP712SignatureStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  name(overrides?: CallOverrides): Promise<string>;

  nonces(signer: string, overrides?: CallOverrides): Promise<BigNumber>;

  ownerOf(tokenId: BigNumberish, overrides?: CallOverrides): Promise<string>;

  post(
    postParams: Types.PostParamsStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  postWithSig(
    postParams: Types.PostParamsStruct,
    signature: Types.EIP712SignatureStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  quote(
    quoteParams: Types.QuoteParamsStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  quoteWithSig(
    quoteParams: Types.QuoteParamsStruct,
    signature: Types.EIP712SignatureStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  royaltyInfo(
    tokenId: BigNumberish,
    salePrice: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[string, BigNumber]>;

  "safeTransferFrom(address,address,uint256)"(
    from: string,
    to: string,
    tokenId: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  "safeTransferFrom(address,address,uint256,bytes)"(
    from: string,
    to: string,
    tokenId: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setApprovalForAll(
    operator: string,
    approved: boolean,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setBlockStatus(
    byProfileId: BigNumberish,
    idsOfProfilesToSetBlockStatus: BigNumberish[],
    blockStatus: boolean[],
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setBlockStatusWithSig(
    byProfileId: BigNumberish,
    idsOfProfilesToSetBlockStatus: BigNumberish[],
    blockStatus: boolean[],
    signature: Types.EIP712SignatureStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setEmergencyAdmin(
    newEmergencyAdmin: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setFollowModule(
    profileId: BigNumberish,
    followModule: string,
    followModuleInitData: BytesLike,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setFollowModuleWithSig(
    profileId: BigNumberish,
    followModule: string,
    followModuleInitData: BytesLike,
    signature: Types.EIP712SignatureStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setGovernance(
    newGovernance: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setMigrationAdmins(
    migrationAdmins: string[],
    whitelisted: boolean,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setProfileMetadataURI(
    profileId: BigNumberish,
    metadataURI: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setProfileMetadataURIWithSig(
    profileId: BigNumberish,
    metadataURI: string,
    signature: Types.EIP712SignatureStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setRoyalty(
    royaltiesInBasisPoints: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setState(
    newState: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setTreasury(
    newTreasury: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setTreasuryFee(
    newTreasuryFee: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  supportsInterface(
    interfaceId: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>;

  symbol(overrides?: CallOverrides): Promise<string>;

  tokenDataOf(
    tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<Types.TokenDataStructOutput>;

  tokenURI(tokenId: BigNumberish, overrides?: CallOverrides): Promise<string>;

  totalSupply(overrides?: CallOverrides): Promise<BigNumber>;

  transferFrom(
    from: string,
    to: string,
    tokenId: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  unfollow(
    unfollowerProfileId: BigNumberish,
    idsOfProfilesToUnfollow: BigNumberish[],
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  unfollowWithSig(
    unfollowerProfileId: BigNumberish,
    idsOfProfilesToUnfollow: BigNumberish[],
    signature: Types.EIP712SignatureStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  whitelistProfileCreator(
    profileCreator: string,
    whitelist: boolean,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  callStatic: {
    DANGER__disableTokenGuardian(overrides?: CallOverrides): Promise<void>;

    TOKEN_GUARDIAN_COOLDOWN(overrides?: CallOverrides): Promise<BigNumber>;

    act(
      publicationActionParams: Types.PublicationActionParamsStruct,
      overrides?: CallOverrides
    ): Promise<string>;

    actWithSig(
      publicationActionParams: Types.PublicationActionParamsStruct,
      signature: Types.EIP712SignatureStruct,
      overrides?: CallOverrides
    ): Promise<string>;

    approve(
      to: string,
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    balanceOf(owner: string, overrides?: CallOverrides): Promise<BigNumber>;

    batchMigrateFollowModules(
      profileIds: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    batchMigrateFollowers(
      followerProfileIds: BigNumberish[],
      idOfProfileFollowed: BigNumberish,
      followTokenIds: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    batchMigrateFollows(
      followerProfileId: BigNumberish,
      idsOfProfileFollowed: BigNumberish[],
      followTokenIds: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    batchMigrateProfiles(
      profileIds: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    burn(tokenId: BigNumberish, overrides?: CallOverrides): Promise<void>;

    "changeDelegatedExecutorsConfig(uint256,address[],bool[],uint64,bool)"(
      delegatorProfileId: BigNumberish,
      delegatedExecutors: string[],
      approvals: boolean[],
      configNumber: BigNumberish,
      switchToGivenConfig: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    "changeDelegatedExecutorsConfig(uint256,address[],bool[])"(
      delegatorProfileId: BigNumberish,
      delegatedExecutors: string[],
      approvals: boolean[],
      overrides?: CallOverrides
    ): Promise<void>;

    changeDelegatedExecutorsConfigWithSig(
      delegatorProfileId: BigNumberish,
      delegatedExecutors: string[],
      approvals: boolean[],
      configNumber: BigNumberish,
      switchToGivenConfig: boolean,
      signature: Types.EIP712SignatureStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    collectLegacy(
      collectParams: Types.LegacyCollectParamsStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    collectLegacyWithSig(
      collectParams: Types.LegacyCollectParamsStruct,
      signature: Types.EIP712SignatureStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    comment(
      commentParams: Types.CommentParamsStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    commentWithSig(
      commentParams: Types.CommentParamsStruct,
      signature: Types.EIP712SignatureStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    createProfile(
      createProfileParams: Types.CreateProfileParamsStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    emitCollectNFTTransferEvent(
      profileId: BigNumberish,
      pubId: BigNumberish,
      collectNFTId: BigNumberish,
      from: string,
      to: string,
      overrides?: CallOverrides
    ): Promise<void>;

    emitUnfollowedEvent(
      unfollowerProfileId: BigNumberish,
      idOfProfileUnfollowed: BigNumberish,
      transactionExecutor: string,
      overrides?: CallOverrides
    ): Promise<void>;

    emitVersion(overrides?: CallOverrides): Promise<void>;

    enableTokenGuardian(overrides?: CallOverrides): Promise<void>;

    exists(tokenId: BigNumberish, overrides?: CallOverrides): Promise<boolean>;

    follow(
      followerProfileId: BigNumberish,
      idsOfProfilesToFollow: BigNumberish[],
      followTokenIds: BigNumberish[],
      datas: BytesLike[],
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    followWithSig(
      followerProfileId: BigNumberish,
      idsOfProfilesToFollow: BigNumberish[],
      followTokenIds: BigNumberish[],
      datas: BytesLike[],
      signature: Types.EIP712SignatureStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    getApproved(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getContentURI(
      profileId: BigNumberish,
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getDelegatedExecutorsConfigNumber(
      delegatorProfileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getDelegatedExecutorsMaxConfigNumberSet(
      delegatorProfileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getDelegatedExecutorsPrevConfigNumber(
      delegatorProfileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getDomainSeparator(overrides?: CallOverrides): Promise<string>;

    getFollowNFTImpl(overrides?: CallOverrides): Promise<string>;

    getGitCommit(overrides?: CallOverrides): Promise<string>;

    getGovernance(overrides?: CallOverrides): Promise<string>;

    getLegacyCollectNFTImpl(overrides?: CallOverrides): Promise<string>;

    getModuleRegistry(overrides?: CallOverrides): Promise<string>;

    getProfile(
      profileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<Types.ProfileStructOutput>;

    getProfileIdByHandleHash(
      handleHash: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPublication(
      profileId: BigNumberish,
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<Types.PublicationMemoryStructOutput>;

    getPublicationType(
      profileId: BigNumberish,
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<number>;

    getState(overrides?: CallOverrides): Promise<number>;

    getTokenGuardianDisablingTimestamp(
      wallet: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTreasury(overrides?: CallOverrides): Promise<string>;

    getTreasuryData(overrides?: CallOverrides): Promise<[string, number]>;

    getTreasuryFee(overrides?: CallOverrides): Promise<number>;

    getVersion(overrides?: CallOverrides): Promise<string>;

    incrementNonce(
      increment: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    isActionModuleEnabledInPublication(
      profileId: BigNumberish,
      pubId: BigNumberish,
      module: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isApprovedForAll(
      owner: string,
      operator: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isBlocked(
      profileId: BigNumberish,
      byProfileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "isDelegatedExecutorApproved(uint256,address)"(
      delegatorProfileId: BigNumberish,
      delegatedExecutor: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "isDelegatedExecutorApproved(uint256,address,uint64)"(
      delegatorProfileId: BigNumberish,
      delegatedExecutor: string,
      configNumber: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isFollowing(
      followerProfileId: BigNumberish,
      followedProfileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isProfileCreatorWhitelisted(
      profileCreator: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    mintTimestampOf(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    mirror(
      mirrorParams: Types.MirrorParamsStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    mirrorWithSig(
      mirrorParams: Types.MirrorParamsStruct,
      signature: Types.EIP712SignatureStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    name(overrides?: CallOverrides): Promise<string>;

    nonces(signer: string, overrides?: CallOverrides): Promise<BigNumber>;

    ownerOf(tokenId: BigNumberish, overrides?: CallOverrides): Promise<string>;

    post(
      postParams: Types.PostParamsStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    postWithSig(
      postParams: Types.PostParamsStruct,
      signature: Types.EIP712SignatureStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    quote(
      quoteParams: Types.QuoteParamsStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    quoteWithSig(
      quoteParams: Types.QuoteParamsStruct,
      signature: Types.EIP712SignatureStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    royaltyInfo(
      tokenId: BigNumberish,
      salePrice: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, BigNumber]>;

    "safeTransferFrom(address,address,uint256)"(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "safeTransferFrom(address,address,uint256,bytes)"(
      from: string,
      to: string,
      tokenId: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    setApprovalForAll(
      operator: string,
      approved: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    setBlockStatus(
      byProfileId: BigNumberish,
      idsOfProfilesToSetBlockStatus: BigNumberish[],
      blockStatus: boolean[],
      overrides?: CallOverrides
    ): Promise<void>;

    setBlockStatusWithSig(
      byProfileId: BigNumberish,
      idsOfProfilesToSetBlockStatus: BigNumberish[],
      blockStatus: boolean[],
      signature: Types.EIP712SignatureStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    setEmergencyAdmin(
      newEmergencyAdmin: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setFollowModule(
      profileId: BigNumberish,
      followModule: string,
      followModuleInitData: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    setFollowModuleWithSig(
      profileId: BigNumberish,
      followModule: string,
      followModuleInitData: BytesLike,
      signature: Types.EIP712SignatureStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    setGovernance(
      newGovernance: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setMigrationAdmins(
      migrationAdmins: string[],
      whitelisted: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    setProfileMetadataURI(
      profileId: BigNumberish,
      metadataURI: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setProfileMetadataURIWithSig(
      profileId: BigNumberish,
      metadataURI: string,
      signature: Types.EIP712SignatureStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    setRoyalty(
      royaltiesInBasisPoints: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setState(newState: BigNumberish, overrides?: CallOverrides): Promise<void>;

    setTreasury(newTreasury: string, overrides?: CallOverrides): Promise<void>;

    setTreasuryFee(
      newTreasuryFee: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    symbol(overrides?: CallOverrides): Promise<string>;

    tokenDataOf(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<Types.TokenDataStructOutput>;

    tokenURI(tokenId: BigNumberish, overrides?: CallOverrides): Promise<string>;

    totalSupply(overrides?: CallOverrides): Promise<BigNumber>;

    transferFrom(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    unfollow(
      unfollowerProfileId: BigNumberish,
      idsOfProfilesToUnfollow: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    unfollowWithSig(
      unfollowerProfileId: BigNumberish,
      idsOfProfilesToUnfollow: BigNumberish[],
      signature: Types.EIP712SignatureStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    whitelistProfileCreator(
      profileCreator: string,
      whitelist: boolean,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "Approval(address,address,uint256)"(
      owner?: string | null,
      approved?: string | null,
      tokenId?: BigNumberish | null
    ): ApprovalEventFilter;
    Approval(
      owner?: string | null,
      approved?: string | null,
      tokenId?: BigNumberish | null
    ): ApprovalEventFilter;

    "ApprovalForAll(address,address,bool)"(
      owner?: string | null,
      operator?: string | null,
      approved?: null
    ): ApprovalForAllEventFilter;
    ApprovalForAll(
      owner?: string | null,
      operator?: string | null,
      approved?: null
    ): ApprovalForAllEventFilter;

    "CollectNFTTransferred(uint256,uint256,uint256,address,address,uint256)"(
      profileId?: BigNumberish | null,
      pubId?: BigNumberish | null,
      collectNFTId?: BigNumberish | null,
      from?: null,
      to?: null,
      timestamp?: null
    ): CollectNFTTransferredEventFilter;
    CollectNFTTransferred(
      profileId?: BigNumberish | null,
      pubId?: BigNumberish | null,
      collectNFTId?: BigNumberish | null,
      from?: null,
      to?: null,
      timestamp?: null
    ): CollectNFTTransferredEventFilter;

    "LensUpgradeVersion(address,string,bytes20,uint256)"(
      implementation?: null,
      version?: null,
      gitCommit?: null,
      timestamp?: null
    ): LensUpgradeVersionEventFilter;
    LensUpgradeVersion(
      implementation?: null,
      version?: null,
      gitCommit?: null,
      timestamp?: null
    ): LensUpgradeVersionEventFilter;

    "TokenGuardianStateChanged(address,bool,uint256,uint256)"(
      wallet?: string | null,
      enabled?: boolean | null,
      tokenGuardianDisablingTimestamp?: null,
      timestamp?: null
    ): TokenGuardianStateChangedEventFilter;
    TokenGuardianStateChanged(
      wallet?: string | null,
      enabled?: boolean | null,
      tokenGuardianDisablingTimestamp?: null,
      timestamp?: null
    ): TokenGuardianStateChangedEventFilter;

    "Transfer(address,address,uint256)"(
      from?: string | null,
      to?: string | null,
      tokenId?: BigNumberish | null
    ): TransferEventFilter;
    Transfer(
      from?: string | null,
      to?: string | null,
      tokenId?: BigNumberish | null
    ): TransferEventFilter;

    "TreasuryFeeSet(uint16,uint16,uint256)"(
      prevTreasuryFee?: BigNumberish | null,
      newTreasuryFee?: BigNumberish | null,
      timestamp?: null
    ): TreasuryFeeSetEventFilter;
    TreasuryFeeSet(
      prevTreasuryFee?: BigNumberish | null,
      newTreasuryFee?: BigNumberish | null,
      timestamp?: null
    ): TreasuryFeeSetEventFilter;

    "TreasurySet(address,address,uint256)"(
      prevTreasury?: string | null,
      newTreasury?: string | null,
      timestamp?: null
    ): TreasurySetEventFilter;
    TreasurySet(
      prevTreasury?: string | null,
      newTreasury?: string | null,
      timestamp?: null
    ): TreasurySetEventFilter;

    "Unfollowed(uint256,uint256,address,uint256)"(
      unfollowerProfileId?: BigNumberish | null,
      idOfProfileUnfollowed?: null,
      transactionExecutor?: null,
      timestamp?: null
    ): UnfollowedEventFilter;
    Unfollowed(
      unfollowerProfileId?: BigNumberish | null,
      idOfProfileUnfollowed?: null,
      transactionExecutor?: null,
      timestamp?: null
    ): UnfollowedEventFilter;
  };

  estimateGas: {
    DANGER__disableTokenGuardian(
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    TOKEN_GUARDIAN_COOLDOWN(overrides?: CallOverrides): Promise<BigNumber>;

    act(
      publicationActionParams: Types.PublicationActionParamsStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    actWithSig(
      publicationActionParams: Types.PublicationActionParamsStruct,
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    approve(
      to: string,
      tokenId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    balanceOf(owner: string, overrides?: CallOverrides): Promise<BigNumber>;

    batchMigrateFollowModules(
      profileIds: BigNumberish[],
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    batchMigrateFollowers(
      followerProfileIds: BigNumberish[],
      idOfProfileFollowed: BigNumberish,
      followTokenIds: BigNumberish[],
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    batchMigrateFollows(
      followerProfileId: BigNumberish,
      idsOfProfileFollowed: BigNumberish[],
      followTokenIds: BigNumberish[],
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    batchMigrateProfiles(
      profileIds: BigNumberish[],
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    burn(
      tokenId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    "changeDelegatedExecutorsConfig(uint256,address[],bool[],uint64,bool)"(
      delegatorProfileId: BigNumberish,
      delegatedExecutors: string[],
      approvals: boolean[],
      configNumber: BigNumberish,
      switchToGivenConfig: boolean,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    "changeDelegatedExecutorsConfig(uint256,address[],bool[])"(
      delegatorProfileId: BigNumberish,
      delegatedExecutors: string[],
      approvals: boolean[],
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    changeDelegatedExecutorsConfigWithSig(
      delegatorProfileId: BigNumberish,
      delegatedExecutors: string[],
      approvals: boolean[],
      configNumber: BigNumberish,
      switchToGivenConfig: boolean,
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    collectLegacy(
      collectParams: Types.LegacyCollectParamsStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    collectLegacyWithSig(
      collectParams: Types.LegacyCollectParamsStruct,
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    comment(
      commentParams: Types.CommentParamsStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    commentWithSig(
      commentParams: Types.CommentParamsStruct,
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    createProfile(
      createProfileParams: Types.CreateProfileParamsStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    emitCollectNFTTransferEvent(
      profileId: BigNumberish,
      pubId: BigNumberish,
      collectNFTId: BigNumberish,
      from: string,
      to: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    emitUnfollowedEvent(
      unfollowerProfileId: BigNumberish,
      idOfProfileUnfollowed: BigNumberish,
      transactionExecutor: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    emitVersion(overrides?: Overrides & { from?: string }): Promise<BigNumber>;

    enableTokenGuardian(
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    exists(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    follow(
      followerProfileId: BigNumberish,
      idsOfProfilesToFollow: BigNumberish[],
      followTokenIds: BigNumberish[],
      datas: BytesLike[],
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    followWithSig(
      followerProfileId: BigNumberish,
      idsOfProfilesToFollow: BigNumberish[],
      followTokenIds: BigNumberish[],
      datas: BytesLike[],
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    getApproved(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getContentURI(
      profileId: BigNumberish,
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getDelegatedExecutorsConfigNumber(
      delegatorProfileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getDelegatedExecutorsMaxConfigNumberSet(
      delegatorProfileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getDelegatedExecutorsPrevConfigNumber(
      delegatorProfileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getDomainSeparator(overrides?: CallOverrides): Promise<BigNumber>;

    getFollowNFTImpl(overrides?: CallOverrides): Promise<BigNumber>;

    getGitCommit(overrides?: CallOverrides): Promise<BigNumber>;

    getGovernance(overrides?: CallOverrides): Promise<BigNumber>;

    getLegacyCollectNFTImpl(overrides?: CallOverrides): Promise<BigNumber>;

    getModuleRegistry(overrides?: CallOverrides): Promise<BigNumber>;

    getProfile(
      profileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getProfileIdByHandleHash(
      handleHash: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPublication(
      profileId: BigNumberish,
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPublicationType(
      profileId: BigNumberish,
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getState(overrides?: CallOverrides): Promise<BigNumber>;

    getTokenGuardianDisablingTimestamp(
      wallet: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTreasury(overrides?: CallOverrides): Promise<BigNumber>;

    getTreasuryData(overrides?: CallOverrides): Promise<BigNumber>;

    getTreasuryFee(overrides?: CallOverrides): Promise<BigNumber>;

    getVersion(overrides?: CallOverrides): Promise<BigNumber>;

    incrementNonce(
      increment: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    isActionModuleEnabledInPublication(
      profileId: BigNumberish,
      pubId: BigNumberish,
      module: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isApprovedForAll(
      owner: string,
      operator: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isBlocked(
      profileId: BigNumberish,
      byProfileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isDelegatedExecutorApproved(uint256,address)"(
      delegatorProfileId: BigNumberish,
      delegatedExecutor: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isDelegatedExecutorApproved(uint256,address,uint64)"(
      delegatorProfileId: BigNumberish,
      delegatedExecutor: string,
      configNumber: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isFollowing(
      followerProfileId: BigNumberish,
      followedProfileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isProfileCreatorWhitelisted(
      profileCreator: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    mintTimestampOf(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    mirror(
      mirrorParams: Types.MirrorParamsStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    mirrorWithSig(
      mirrorParams: Types.MirrorParamsStruct,
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    name(overrides?: CallOverrides): Promise<BigNumber>;

    nonces(signer: string, overrides?: CallOverrides): Promise<BigNumber>;

    ownerOf(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    post(
      postParams: Types.PostParamsStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    postWithSig(
      postParams: Types.PostParamsStruct,
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    quote(
      quoteParams: Types.QuoteParamsStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    quoteWithSig(
      quoteParams: Types.QuoteParamsStruct,
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    royaltyInfo(
      tokenId: BigNumberish,
      salePrice: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "safeTransferFrom(address,address,uint256)"(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    "safeTransferFrom(address,address,uint256,bytes)"(
      from: string,
      to: string,
      tokenId: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setApprovalForAll(
      operator: string,
      approved: boolean,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setBlockStatus(
      byProfileId: BigNumberish,
      idsOfProfilesToSetBlockStatus: BigNumberish[],
      blockStatus: boolean[],
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setBlockStatusWithSig(
      byProfileId: BigNumberish,
      idsOfProfilesToSetBlockStatus: BigNumberish[],
      blockStatus: boolean[],
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setEmergencyAdmin(
      newEmergencyAdmin: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setFollowModule(
      profileId: BigNumberish,
      followModule: string,
      followModuleInitData: BytesLike,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setFollowModuleWithSig(
      profileId: BigNumberish,
      followModule: string,
      followModuleInitData: BytesLike,
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setGovernance(
      newGovernance: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setMigrationAdmins(
      migrationAdmins: string[],
      whitelisted: boolean,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setProfileMetadataURI(
      profileId: BigNumberish,
      metadataURI: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setProfileMetadataURIWithSig(
      profileId: BigNumberish,
      metadataURI: string,
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setRoyalty(
      royaltiesInBasisPoints: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setState(
      newState: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setTreasury(
      newTreasury: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setTreasuryFee(
      newTreasuryFee: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    symbol(overrides?: CallOverrides): Promise<BigNumber>;

    tokenDataOf(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    tokenURI(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    totalSupply(overrides?: CallOverrides): Promise<BigNumber>;

    transferFrom(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    unfollow(
      unfollowerProfileId: BigNumberish,
      idsOfProfilesToUnfollow: BigNumberish[],
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    unfollowWithSig(
      unfollowerProfileId: BigNumberish,
      idsOfProfilesToUnfollow: BigNumberish[],
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    whitelistProfileCreator(
      profileCreator: string,
      whitelist: boolean,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    DANGER__disableTokenGuardian(
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    TOKEN_GUARDIAN_COOLDOWN(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    act(
      publicationActionParams: Types.PublicationActionParamsStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    actWithSig(
      publicationActionParams: Types.PublicationActionParamsStruct,
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    approve(
      to: string,
      tokenId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    balanceOf(
      owner: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    batchMigrateFollowModules(
      profileIds: BigNumberish[],
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    batchMigrateFollowers(
      followerProfileIds: BigNumberish[],
      idOfProfileFollowed: BigNumberish,
      followTokenIds: BigNumberish[],
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    batchMigrateFollows(
      followerProfileId: BigNumberish,
      idsOfProfileFollowed: BigNumberish[],
      followTokenIds: BigNumberish[],
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    batchMigrateProfiles(
      profileIds: BigNumberish[],
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    burn(
      tokenId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    "changeDelegatedExecutorsConfig(uint256,address[],bool[],uint64,bool)"(
      delegatorProfileId: BigNumberish,
      delegatedExecutors: string[],
      approvals: boolean[],
      configNumber: BigNumberish,
      switchToGivenConfig: boolean,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    "changeDelegatedExecutorsConfig(uint256,address[],bool[])"(
      delegatorProfileId: BigNumberish,
      delegatedExecutors: string[],
      approvals: boolean[],
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    changeDelegatedExecutorsConfigWithSig(
      delegatorProfileId: BigNumberish,
      delegatedExecutors: string[],
      approvals: boolean[],
      configNumber: BigNumberish,
      switchToGivenConfig: boolean,
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    collectLegacy(
      collectParams: Types.LegacyCollectParamsStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    collectLegacyWithSig(
      collectParams: Types.LegacyCollectParamsStruct,
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    comment(
      commentParams: Types.CommentParamsStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    commentWithSig(
      commentParams: Types.CommentParamsStruct,
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    createProfile(
      createProfileParams: Types.CreateProfileParamsStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    emitCollectNFTTransferEvent(
      profileId: BigNumberish,
      pubId: BigNumberish,
      collectNFTId: BigNumberish,
      from: string,
      to: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    emitUnfollowedEvent(
      unfollowerProfileId: BigNumberish,
      idOfProfileUnfollowed: BigNumberish,
      transactionExecutor: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    emitVersion(
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    enableTokenGuardian(
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    exists(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    follow(
      followerProfileId: BigNumberish,
      idsOfProfilesToFollow: BigNumberish[],
      followTokenIds: BigNumberish[],
      datas: BytesLike[],
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    followWithSig(
      followerProfileId: BigNumberish,
      idsOfProfilesToFollow: BigNumberish[],
      followTokenIds: BigNumberish[],
      datas: BytesLike[],
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    getApproved(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getContentURI(
      profileId: BigNumberish,
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getDelegatedExecutorsConfigNumber(
      delegatorProfileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getDelegatedExecutorsMaxConfigNumberSet(
      delegatorProfileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getDelegatedExecutorsPrevConfigNumber(
      delegatorProfileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getDomainSeparator(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFollowNFTImpl(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getGitCommit(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getGovernance(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getLegacyCollectNFTImpl(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getModuleRegistry(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getProfile(
      profileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getProfileIdByHandleHash(
      handleHash: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPublication(
      profileId: BigNumberish,
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPublicationType(
      profileId: BigNumberish,
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getState(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getTokenGuardianDisablingTimestamp(
      wallet: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTreasury(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getTreasuryData(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getTreasuryFee(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getVersion(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    incrementNonce(
      increment: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    isActionModuleEnabledInPublication(
      profileId: BigNumberish,
      pubId: BigNumberish,
      module: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isApprovedForAll(
      owner: string,
      operator: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isBlocked(
      profileId: BigNumberish,
      byProfileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isDelegatedExecutorApproved(uint256,address)"(
      delegatorProfileId: BigNumberish,
      delegatedExecutor: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isDelegatedExecutorApproved(uint256,address,uint64)"(
      delegatorProfileId: BigNumberish,
      delegatedExecutor: string,
      configNumber: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isFollowing(
      followerProfileId: BigNumberish,
      followedProfileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isProfileCreatorWhitelisted(
      profileCreator: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    mintTimestampOf(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    mirror(
      mirrorParams: Types.MirrorParamsStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    mirrorWithSig(
      mirrorParams: Types.MirrorParamsStruct,
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    name(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    nonces(
      signer: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    ownerOf(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    post(
      postParams: Types.PostParamsStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    postWithSig(
      postParams: Types.PostParamsStruct,
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    quote(
      quoteParams: Types.QuoteParamsStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    quoteWithSig(
      quoteParams: Types.QuoteParamsStruct,
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    royaltyInfo(
      tokenId: BigNumberish,
      salePrice: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "safeTransferFrom(address,address,uint256)"(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    "safeTransferFrom(address,address,uint256,bytes)"(
      from: string,
      to: string,
      tokenId: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setApprovalForAll(
      operator: string,
      approved: boolean,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setBlockStatus(
      byProfileId: BigNumberish,
      idsOfProfilesToSetBlockStatus: BigNumberish[],
      blockStatus: boolean[],
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setBlockStatusWithSig(
      byProfileId: BigNumberish,
      idsOfProfilesToSetBlockStatus: BigNumberish[],
      blockStatus: boolean[],
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setEmergencyAdmin(
      newEmergencyAdmin: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setFollowModule(
      profileId: BigNumberish,
      followModule: string,
      followModuleInitData: BytesLike,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setFollowModuleWithSig(
      profileId: BigNumberish,
      followModule: string,
      followModuleInitData: BytesLike,
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setGovernance(
      newGovernance: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setMigrationAdmins(
      migrationAdmins: string[],
      whitelisted: boolean,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setProfileMetadataURI(
      profileId: BigNumberish,
      metadataURI: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setProfileMetadataURIWithSig(
      profileId: BigNumberish,
      metadataURI: string,
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setRoyalty(
      royaltiesInBasisPoints: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setState(
      newState: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setTreasury(
      newTreasury: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setTreasuryFee(
      newTreasuryFee: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    symbol(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    tokenDataOf(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    tokenURI(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    totalSupply(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    transferFrom(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    unfollow(
      unfollowerProfileId: BigNumberish,
      idsOfProfilesToUnfollow: BigNumberish[],
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    unfollowWithSig(
      unfollowerProfileId: BigNumberish,
      idsOfProfilesToUnfollow: BigNumberish[],
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    whitelistProfileCreator(
      profileCreator: string,
      whitelist: boolean,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;
  };
}
