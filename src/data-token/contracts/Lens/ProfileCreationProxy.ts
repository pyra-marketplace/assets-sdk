/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../common";

export declare namespace Types {
  export type CreateProfileParamsStruct = {
    to: string;
    followModule: string;
    followModuleInitData: BytesLike;
  };

  export type CreateProfileParamsStructOutput = [string, string, string] & {
    to: string;
    followModule: string;
    followModuleInitData: string;
  };
}

export interface ProfileCreationProxyInterface extends utils.Interface {
  functions: {
    "LENS_HUB()": FunctionFragment;
    "OWNER()": FunctionFragment;
    "proxyCreateHandle(address,string)": FunctionFragment;
    "proxyCreateProfile((address,address,bytes))": FunctionFragment;
    "proxyCreateProfileWithHandle((address,address,bytes),string)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "LENS_HUB"
      | "OWNER"
      | "proxyCreateHandle"
      | "proxyCreateProfile"
      | "proxyCreateProfileWithHandle"
  ): FunctionFragment;

  encodeFunctionData(functionFragment: "LENS_HUB", values?: undefined): string;
  encodeFunctionData(functionFragment: "OWNER", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "proxyCreateHandle",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "proxyCreateProfile",
    values: [Types.CreateProfileParamsStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "proxyCreateProfileWithHandle",
    values: [Types.CreateProfileParamsStruct, string]
  ): string;

  decodeFunctionResult(functionFragment: "LENS_HUB", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "OWNER", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "proxyCreateHandle",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "proxyCreateProfile",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "proxyCreateProfileWithHandle",
    data: BytesLike
  ): Result;

  events: {};
}

export interface ProfileCreationProxy extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: ProfileCreationProxyInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    LENS_HUB(overrides?: CallOverrides): Promise<[string]>;

    OWNER(overrides?: CallOverrides): Promise<[string]>;

    proxyCreateHandle(
      to: string,
      handle: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    proxyCreateProfile(
      createProfileParams: Types.CreateProfileParamsStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    proxyCreateProfileWithHandle(
      createProfileParams: Types.CreateProfileParamsStruct,
      handle: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;
  };

  LENS_HUB(overrides?: CallOverrides): Promise<string>;

  OWNER(overrides?: CallOverrides): Promise<string>;

  proxyCreateHandle(
    to: string,
    handle: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  proxyCreateProfile(
    createProfileParams: Types.CreateProfileParamsStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  proxyCreateProfileWithHandle(
    createProfileParams: Types.CreateProfileParamsStruct,
    handle: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  callStatic: {
    LENS_HUB(overrides?: CallOverrides): Promise<string>;

    OWNER(overrides?: CallOverrides): Promise<string>;

    proxyCreateHandle(
      to: string,
      handle: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    proxyCreateProfile(
      createProfileParams: Types.CreateProfileParamsStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    proxyCreateProfileWithHandle(
      createProfileParams: Types.CreateProfileParamsStruct,
      handle: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber]>;
  };

  filters: {};

  estimateGas: {
    LENS_HUB(overrides?: CallOverrides): Promise<BigNumber>;

    OWNER(overrides?: CallOverrides): Promise<BigNumber>;

    proxyCreateHandle(
      to: string,
      handle: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    proxyCreateProfile(
      createProfileParams: Types.CreateProfileParamsStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    proxyCreateProfileWithHandle(
      createProfileParams: Types.CreateProfileParamsStruct,
      handle: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    LENS_HUB(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    OWNER(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    proxyCreateHandle(
      to: string,
      handle: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    proxyCreateProfile(
      createProfileParams: Types.CreateProfileParamsStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    proxyCreateProfileWithHandle(
      createProfileParams: Types.CreateProfileParamsStruct,
      handle: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;
  };
}
