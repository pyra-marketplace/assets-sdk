/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  LimitedFeeCollectModule,
  LimitedFeeCollectModuleInterface,
} from "../../Profileless/LimitedFeeCollectModule";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "profilelessHub",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ExceedCollectLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "InitParamsInvalid",
    type: "error",
  },
  {
    inputs: [],
    name: "ModuleDataMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "NotProfilelessHub",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pubId",
        type: "uint256",
      },
    ],
    name: "getPublicationData",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "collectLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentCollects",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
        ],
        internalType: "struct ProfilePublicationData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pubId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "initializePublicationCollectModule",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pubId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "collector",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "processCollect",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610b40380380610b4083398101604081905261002f91610069565b806001600160a01b0381166100575760405163d92e233d60e01b815260040160405180910390fd5b6001600160a01b031660805250610099565b60006020828403121561007b57600080fd5b81516001600160a01b038116811461009257600080fd5b9392505050565b608051610a7f6100c16000396000818160ee015281816101a201526104740152610a7f6000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063075b90de1461004657806324a3b4361461005b578063cec5d50414610084575b600080fd5b610059610054366004610842565b6100e3565b005b61006e61006936600461089e565b610195565b60405161007b9190610942565b60405180910390f35b610097610092366004610955565b610348565b60405161007b91908151815260208083015190820152604080830151908201526060808301516001600160a01b0390811691830191909152608092830151169181019190915260a00190565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461012c57604051634b71360160e11b815260040160405180910390fd5b60008481526001602081905260409091208054910154106101605760405163ad65a96360e01b815260040160405180910390fd5b6000848152600160208190526040822001805490919061017f9061096e565b9091555061018f838584846103e8565b50505050565b6060336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101e057604051634b71360160e11b815260040160405180910390fd5b60008080806101f186880188610995565b9350935093509350836000148061020e575061020c82610452565b155b80610217575082155b15610235576040516348be0eb360e01b815260040160405180910390fd5b60006040518060a0016040528086815260200160008152602001858152602001846001600160a01b03168152602001836001600160a01b0316815250905080600160008b815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060808201518160040160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555090505087878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092985050505050505050505b9392505050565b61038c6040518060a0016040528060008152602001600081526020016000815260200160006001600160a01b0316815260200160006001600160a01b031681525090565b50600090815260016020818152604092839020835160a08101855281548152928101549183019190915260028101549282019290925260038201546001600160a01b039081166060830152600490920154909116608082015290565b60008381526001602052604090206003810154600282015461041791859185916001600160a01b0316906104e7565b60028101541561044b5760048101546002820154600383015461044b926001600160a01b0391821692899290911690610541565b5050505050565b6040516343b938c560e01b81526001600160a01b0382811660048301526000917f0000000000000000000000000000000000000000000000000000000000000000909116906343b938c590602401602060405180830381865afa1580156104bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e191906109df565b92915050565b6000806104f685870187610a01565b91509150828114158061051b5750836001600160a01b0316826001600160a01b031614155b15610539576040516346308bd560e01b815260040160405180910390fd5b505050505050565b604080516001600160a01b038581166024830152848116604483015260648083018590528351808403909101815260849092018352602080830180516001600160e01b03166323b872dd60e01b17905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65649084015261018f928792916000916105d9918516908490610660565b80519091501561065b57808060200190518101906105f791906109df565b61065b5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084015b60405180910390fd5b505050565b606061066f8484600085610677565b949350505050565b6060824710156106d85760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610652565b6001600160a01b0385163b61072f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610652565b600080866001600160a01b0316858760405161074b9190610a2d565b60006040518083038185875af1925050503d8060008114610788576040519150601f19603f3d011682016040523d82523d6000602084013e61078d565b606091505b509150915061079d8282866107a8565b979650505050505050565b606083156107b7575081610341565b8251156107c75782518084602001fd5b8160405162461bcd60e51b81526004016106529190610942565b6001600160a01b03811681146107f657600080fd5b50565b60008083601f84011261080b57600080fd5b50813567ffffffffffffffff81111561082357600080fd5b60208301915083602082850101111561083b57600080fd5b9250929050565b6000806000806060858703121561085857600080fd5b84359350602085013561086a816107e1565b9250604085013567ffffffffffffffff81111561088657600080fd5b610892878288016107f9565b95989497509550505050565b6000806000604084860312156108b357600080fd5b83359250602084013567ffffffffffffffff8111156108d157600080fd5b6108dd868287016107f9565b9497909650939450505050565b60005b838110156109055781810151838201526020016108ed565b8381111561018f5750506000910152565b6000815180845261092e8160208601602086016108ea565b601f01601f19169290920160200192915050565b6020815260006103416020830184610916565b60006020828403121561096757600080fd5b5035919050565b60006001820161098e57634e487b7160e01b600052601160045260246000fd5b5060010190565b600080600080608085870312156109ab57600080fd5b843593506020850135925060408501356109c4816107e1565b915060608501356109d4816107e1565b939692955090935050565b6000602082840312156109f157600080fd5b8151801515811461034157600080fd5b60008060408385031215610a1457600080fd5b8235610a1f816107e1565b946020939093013593505050565b60008251610a3f8184602087016108ea565b919091019291505056fea26469706673582212201a0dc7ee1300acaf0c3d3f3941844aa994cabd88cf6b24d4241f6fc44c1f0f5364736f6c634300080e0033";

type LimitedFeeCollectModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LimitedFeeCollectModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LimitedFeeCollectModule__factory extends ContractFactory {
  constructor(...args: LimitedFeeCollectModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    profilelessHub: string,
    overrides?: Overrides & { from?: string }
  ): Promise<LimitedFeeCollectModule> {
    return super.deploy(
      profilelessHub,
      overrides || {}
    ) as Promise<LimitedFeeCollectModule>;
  }
  override getDeployTransaction(
    profilelessHub: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(profilelessHub, overrides || {});
  }
  override attach(address: string): LimitedFeeCollectModule {
    return super.attach(address) as LimitedFeeCollectModule;
  }
  override connect(signer: Signer): LimitedFeeCollectModule__factory {
    return super.connect(signer) as LimitedFeeCollectModule__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LimitedFeeCollectModuleInterface {
    return new utils.Interface(_abi) as LimitedFeeCollectModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LimitedFeeCollectModule {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as LimitedFeeCollectModule;
  }
}
