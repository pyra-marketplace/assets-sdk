/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IDataTokenHub, IDataTokenHubInterface } from "../IDataTokenHub";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "collector",
        type: "address",
      },
      {
        internalType: "address",
        name: "collectNFT",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "emitCollected",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getGovernor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
    ],
    name: "isDataTokenFactoryWhitelisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dataToken",
        type: "address",
      },
    ],
    name: "isDataTokenRegistered",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dataTokenOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "originalContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "dataToken",
        type: "address",
      },
    ],
    name: "registerDataToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newGovernor",
        type: "address",
      },
    ],
    name: "setGovernor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "bool",
        name: "whitelistStatus",
        type: "bool",
      },
    ],
    name: "whitelistDataTokenFactory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IDataTokenHub__factory {
  static readonly abi = _abi;
  static createInterface(): IDataTokenHubInterface {
    return new utils.Interface(_abi) as IDataTokenHubInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IDataTokenHub {
    return new Contract(address, _abi, signerOrProvider) as IDataTokenHub;
  }
}
