/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SimpleFeeCollectModule,
  SimpleFeeCollectModuleInterface,
} from "../../Lens/SimpleFeeCollectModule";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "hub",
        type: "address",
      },
      {
        internalType: "address",
        name: "actionModule",
        type: "address",
      },
      {
        internalType: "address",
        name: "moduleRegistry",
        type: "address",
      },
      {
        internalType: "address",
        name: "moduleOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CollectExpired",
    type: "error",
  },
  {
    inputs: [],
    name: "InitParamsInvalid",
    type: "error",
  },
  {
    inputs: [],
    name: "MintLimitExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "ModuleDataMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "NotActionModule",
    type: "error",
  },
  {
    inputs: [],
    name: "NotFollowing",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "ACTION_MODULE",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MODULE_REGISTRY",
    outputs: [
      {
        internalType: "contract IModuleRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "publicationCollectedProfileId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "publicationCollectedId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "collectorProfileId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "collectorProfileOwner",
            type: "address",
          },
          {
            internalType: "address",
            name: "transactionExecutor",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "referrerProfileIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "referrerPubIds",
            type: "uint256[]",
          },
          {
            internalType: "enum Types.PublicationType[]",
            name: "referrerPubTypes",
            type: "uint8[]",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct ModuleTypes.ProcessCollectParams",
        name: "processCollectParams",
        type: "tuple",
      },
    ],
    name: "calculateFee",
    outputs: [
      {
        internalType: "uint160",
        name: "",
        type: "uint160",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pubId",
        type: "uint256",
      },
    ],
    name: "getBasePublicationData",
    outputs: [
      {
        components: [
          {
            internalType: "uint160",
            name: "amount",
            type: "uint160",
          },
          {
            internalType: "uint96",
            name: "collectLimit",
            type: "uint96",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "currentCollects",
            type: "uint96",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "referralFee",
            type: "uint16",
          },
          {
            internalType: "bool",
            name: "followerOnly",
            type: "bool",
          },
          {
            internalType: "uint72",
            name: "endTimestamp",
            type: "uint72",
          },
        ],
        internalType: "struct BaseProfilePublicationData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getModuleMetadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pubId",
        type: "uint256",
      },
    ],
    name: "getPublicationData",
    outputs: [
      {
        components: [
          {
            internalType: "uint160",
            name: "amount",
            type: "uint160",
          },
          {
            internalType: "uint96",
            name: "collectLimit",
            type: "uint96",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "currentCollects",
            type: "uint96",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "referralFee",
            type: "uint16",
          },
          {
            internalType: "bool",
            name: "followerOnly",
            type: "bool",
          },
          {
            internalType: "uint72",
            name: "endTimestamp",
            type: "uint72",
          },
        ],
        internalType: "struct BaseProfilePublicationData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pubId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "initializePublicationCollectModule",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "metadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "publicationCollectedProfileId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "publicationCollectedId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "collectorProfileId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "collectorProfileOwner",
            type: "address",
          },
          {
            internalType: "address",
            name: "transactionExecutor",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "referrerProfileIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "referrerPubIds",
            type: "uint256[]",
          },
          {
            internalType: "enum Types.PublicationType[]",
            name: "referrerPubTypes",
            type: "uint8[]",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct ModuleTypes.ProcessCollectParams",
        name: "processCollectParams",
        type: "tuple",
      },
    ],
    name: "processCollect",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_metadataURI",
        type: "string",
      },
    ],
    name: "setModuleMetadataURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceID",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101006040523480156200001257600080fd5b5060405162001bb838038062001bb88339810160408190526200003591620000e5565b6001600160a01b03848116608081905283821660a05290841660c05260e05280620000603362000076565b6200006b8162000076565b505050505062000142565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b0381168114620000e057600080fd5b919050565b60008060008060808587031215620000fc57600080fd5b6200010785620000c8565b93506200011760208601620000c8565b92506200012760408601620000c8565b91506200013760608601620000c8565b905092959194509250565b60805160a05160c05160e051611a20620001986000396000818161080a0152610da80152600081816101010152818161033401526103ee0152600081816101a00152610ebf01526000610bea0152611a206000f3fe608060405234801561001057600080fd5b50600436106100ba5760003560e01c806301ffc9a7146100bf57806303ee438c146100e7578063397a2a88146100fc5780633f50389214610130578063681591c1146101505780636fb7166114610165578063715018a6146101785780638da5cb5b1461018057806391027b5314610188578063b95ddb521461019b578063ce90d52e146101c2578063f2fde38b146101ca578063f8d7758c146101dd578063fcdd2347146101f0575b600080fd5b6100d26100cd36600461126a565b610203565b60405190151581526020015b60405180910390f35b6100ef610268565b6040516100de91906112e4565b6101237f000000000000000000000000000000000000000000000000000000000000000081565b6040516100de91906112f7565b61014361013e36600461130b565b6102f6565b6040516100de919061132d565b61016361015e366004611409565b61030f565b005b6100ef6101733660046114b9565b610327565b6101636103be565b6101236103d2565b6100ef610196366004611514565b6103e1565b6101237f000000000000000000000000000000000000000000000000000000000000000081565b6100ef610529565b6101636101d83660046115a9565b6105bb565b6101236101eb3660046114b9565b610639565b6101436101fe36600461130b565b610661565b6000637f5ab69960e11b6001600160e01b0319831614806102625750604080516a4c454e535f4d4f44554c4560a81b6020808301919091528251600b818403018152602b90920190925280519101206001600160e01b03198381169116145b92915050565b60028054610275906115c6565b80601f01602080910402602001604051908101604052809291908181526020018280546102a1906115c6565b80156102ee5780601f106102c3576101008083540402835291602001916102ee565b820191906000526020600020905b8154815290600101906020018083116102d157829003601f168201915b505050505081565b6102fe611226565b6103088383610661565b9392505050565b610317610714565b60026103238282611646565b5050565b6060336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461037257604051632fc56e1160e21b815260040160405180910390fd5b61037b82610773565b61038860a0830183611705565b905060000361039f5761039a826108e1565b6103a8565b6103a8826109a8565b506040805160208101909152600081525b919050565b6103c6610714565b6103d06000610a66565b565b6001546001600160a01b031690565b6060336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461042c57604051632fc56e1160e21b815260040160405180910390fd5b600061043a838501856117a0565b905061044581610ab8565b8051600097885260208881526040808a20988a52978152878920818401516001600160a01b03938416600160a01b6001600160601b039092168202178255898501516001830180546001600160a01b03191691861691909117905560c0850151600290920180546060870151608088015160a090980151949096166001600160b01b03199091161761ffff909516909102939093176001600160b01b0316600160b01b941515949094026001600160b81b031693909317600160b81b6001600160481b03909416939093029290921790558551908101909552505050918152919050565b606060028054610538906115c6565b80601f0160208091040260200160405190810160405280929190818152602001828054610564906115c6565b80156105b15780601f10610586576101008083540402835291602001916105b1565b820191906000526020600020905b81548152906001019060200180831161059457829003601f168201915b5050505050905090565b6105c3610714565b6001600160a01b03811661062d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61063681610a66565b50565b803560009081526020818152604080832093820135835292905220546001600160a01b031690565b610669611226565b506000918252602082815260408084209284529181529181902081516101008101835281546001600160a01b038082168352600160a01b918290046001600160601b0390811696840196909652600184015480821695840195909552938190049094166060820152600290910154918216608082015291810461ffff1660a0830152600160b01b810460ff16151560c0830152600160b81b90046001600160481b031660e082015290565b3361071d6103d2565b6001600160a01b0316146103d05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610624565b8035600090815260208181526040808320828501358452909152812060010180546014906107b090600160a01b90046001600160601b0316611858565b82546001600160601b038083166101009490940a9384029302191691909117909155823560009081526020818152604080832082870135845290915290206002015490915060ff600160b01b9091041615610835576108357f000000000000000000000000000000000000000000000000000000000000000060408401358435610b77565b8135600090815260208181526040808320828601358452909152902060028101549054600160b81b9091046001600160481b031690600160a01b90046001600160601b03168015801590610891575080836001600160601b0316115b156108af57604051635b21dfd360e11b815260040160405180910390fd5b81158015906108bd57508142115b156108db576040516304cd703960e51b815260040160405180910390fd5b50505050565b60006108ec82610639565b82356000908152602081815260408083208287013584529091529020600101546001600160a01b0391821692501661093261092b610100850185611886565b8385610b93565b60008061093d610be5565b9092509050600061271061095561ffff8416876118cc565b61095f91906118e3565b9050801561098c5761098c61097a60a08801608089016115a9565b6001600160a01b038616908584610c71565b6109a0868561099b8489611905565b610ccb565b505050505050565b60006109b382610639565b82356000908152602081815260408083208287013584529091529020600101546001600160a01b039182169250166109f261092b610100850185611886565b6000806109fd610be5565b90925090506000612710610a1561ffff8416876118cc565b610a1f91906118e3565b90508015610a3a57610a3a61097a60a08801608089016115a9565b6000610a508786610a4b858a611905565b610d1f565b9050610a5d878683610ccb565b50505050505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b0316158015610adc575060408101516001600160a01b031615155b80610b06575080516001600160a01b031615801590610b06575060408101516001600160a01b0316155b80610b1e575061271061ffff16816060015161ffff16115b80610b4c575060a08101516001600160481b031615801590610b4c5750428160a001516001600160481b0316105b15610b6a576040516348be0eb360e01b815260040160405180910390fd5b6106368160400151610e99565b808203610b8357505050565b610b8e838383610f37565b505050565b600080610ba285870187611918565b915091508281141580610bc75750836001600160a01b0316826001600160a01b031614155b156109a0576040516346308bd560e01b815260040160405180910390fd5b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166398f965d16040518163ffffffff1660e01b81526004016040805180830381865afa158015610c45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c699190611944565b915091509091565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526108db908590610fc4565b82356000908152602081815260408083208287013584529091529020600201546001600160a01b031681156108db576108db610d0d60a08601608087016115a9565b6001600160a01b038516908385610c71565b8235600090815260208181526040808320828701358452909152812060020154600160a01b900461ffff16818115610e8557612710610d5e83866118cc565b610d6891906118e3565b90506000610d7960a0880188611705565b915060009050610d8982846118e3565b90508015610e825760005b82811015610e805760006001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016636352211e610dda60a08d018d611705565b85818110610dea57610dea61197e565b905060200201356040518263ffffffff1660e01b8152600401610e0f91815260200190565b602060405180830381865afa158015610e2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e509190611994565b9050610e77610e6560a08c0160808d016115a9565b6001600160a01b038b16908386610c71565b50600101610d94565b505b50505b610e8f8185611905565b9695505050505050565b6001600160a01b0381161561063657604051633f8ecfd360e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063fe3b3f4c90610ef49084906004016112f7565b6020604051808303816000875af1158015610f13573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032391906119b1565b6040516347720ebb60e01b815260048101839052602481018290526001600160a01b038416906347720ebb90604401602060405180830381865afa158015610f83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fa791906119b1565b610b8e576040516322d9eef360e21b815260040160405180910390fd5b6000611019826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166110969092919063ffffffff16565b805190915015610b8e578080602001905181019061103791906119b1565b610b8e5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610624565b60606110a584846000856110ad565b949350505050565b60608247101561110e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610624565b600080866001600160a01b0316858760405161112a91906119ce565b60006040518083038185875af1925050503d8060008114611167576040519150601f19603f3d011682016040523d82523d6000602084013e61116c565b606091505b509150915061117d87838387611188565b979650505050505050565b606083156111f75782516000036111f0576001600160a01b0385163b6111f05760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610624565b50816110a5565b6110a5838381511561120c5781518083602001fd5b8060405162461bcd60e51b815260040161062491906112e4565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081019190915290565b60006020828403121561127c57600080fd5b81356001600160e01b03198116811461030857600080fd5b60005b838110156112af578181015183820152602001611297565b50506000910152565b600081518084526112d0816020860160208601611294565b601f01601f19169290920160200192915050565b60208152600061030860208301846112b8565b6001600160a01b0391909116815260200190565b6000806040838503121561131e57600080fd5b50508035926020909101359150565b81516001600160a01b0390811682526020808401516001600160601b0390811691840191909152604080850151831690840152606080850151909116908301526080808401519091169082015260a0828101516101008301916113959084018261ffff169052565b5060c08301516113a960c084018215159052565b5060e08301516113c460e08401826001600160481b03169052565b5092915050565b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b0381118282101715611403576114036113cb565b60405290565b60006020828403121561141b57600080fd5b81356001600160401b038082111561143257600080fd5b818401915084601f83011261144657600080fd5b813581811115611458576114586113cb565b604051601f8201601f19908116603f01168101908382118183101715611480576114806113cb565b8160405282815287602084870101111561149957600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000602082840312156114cb57600080fd5b81356001600160401b038111156114e157600080fd5b8201610120818503121561030857600080fd5b6001600160a01b038116811461063657600080fd5b80356103b9816114f4565b60008060008060006080868803121561152c57600080fd5b85359450602086013593506040860135611545816114f4565b925060608601356001600160401b038082111561156157600080fd5b818801915088601f83011261157557600080fd5b81358181111561158457600080fd5b89602082850101111561159657600080fd5b9699959850939650602001949392505050565b6000602082840312156115bb57600080fd5b8135610308816114f4565b600181811c908216806115da57607f821691505b6020821081036115fa57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610b8e57600081815260208120601f850160051c810160208610156116275750805b601f850160051c820191505b818110156109a057828155600101611633565b81516001600160401b0381111561165f5761165f6113cb565b6116738161166d84546115c6565b84611600565b602080601f8311600181146116a857600084156116905750858301515b600019600386901b1c1916600185901b1785556109a0565b600085815260208120601f198616915b828110156116d7578886015182559484019460019091019084016116b8565b50858210156116f55787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000808335601e1984360301811261171c57600080fd5b8301803591506001600160401b0382111561173657600080fd5b6020019150600581901b360382131561174e57600080fd5b9250929050565b61ffff8116811461063657600080fd5b80356103b981611755565b801515811461063657600080fd5b80356103b981611770565b80356001600160481b03811681146103b957600080fd5b600060e082840312156117b257600080fd5b6117ba6113e1565b82356117c5816114f4565b815260208301356001600160601b03811681146117e157600080fd5b60208201526117f260408401611509565b604082015261180360608401611765565b60608201526118146080840161177e565b608082015261182560a08401611789565b60a082015261183660c08401611509565b60c08201529392505050565b634e487b7160e01b600052601160045260246000fd5b60006001600160601b038281166002600160601b0319810161187c5761187c611842565b6001019392505050565b6000808335601e1984360301811261189d57600080fd5b8301803591506001600160401b038211156118b757600080fd5b60200191503681900382131561174e57600080fd5b808202811582820484141761026257610262611842565b60008261190057634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561026257610262611842565b6000806040838503121561192b57600080fd5b8235611936816114f4565b946020939093013593505050565b6000806040838503121561195757600080fd5b8251611962816114f4565b602084015190925061197381611755565b809150509250929050565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156119a657600080fd5b8151610308816114f4565b6000602082840312156119c357600080fd5b815161030881611770565b600082516119e0818460208701611294565b919091019291505056fea2646970667358221220193f985eec80af43363691a409970514fe7ad5858a44732636866cfe2a5b3e9264736f6c63430008150033";

type SimpleFeeCollectModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleFeeCollectModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleFeeCollectModule__factory extends ContractFactory {
  constructor(...args: SimpleFeeCollectModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    hub: string,
    actionModule: string,
    moduleRegistry: string,
    moduleOwner: string,
    overrides?: Overrides & { from?: string }
  ): Promise<SimpleFeeCollectModule> {
    return super.deploy(
      hub,
      actionModule,
      moduleRegistry,
      moduleOwner,
      overrides || {}
    ) as Promise<SimpleFeeCollectModule>;
  }
  override getDeployTransaction(
    hub: string,
    actionModule: string,
    moduleRegistry: string,
    moduleOwner: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      hub,
      actionModule,
      moduleRegistry,
      moduleOwner,
      overrides || {}
    );
  }
  override attach(address: string): SimpleFeeCollectModule {
    return super.attach(address) as SimpleFeeCollectModule;
  }
  override connect(signer: Signer): SimpleFeeCollectModule__factory {
    return super.connect(signer) as SimpleFeeCollectModule__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleFeeCollectModuleInterface {
    return new utils.Interface(_abi) as SimpleFeeCollectModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleFeeCollectModule {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SimpleFeeCollectModule;
  }
}
