/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CollectPublicationAction,
  CollectPublicationActionInterface,
} from "../../Lens/CollectPublicationAction";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "hub",
        type: "address",
      },
      {
        internalType: "address",
        name: "collectNFTImpl",
        type: "address",
      },
      {
        internalType: "address",
        name: "moduleOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "CollectNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "NotCollectModule",
    type: "error",
  },
  {
    inputs: [],
    name: "NotHub",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "collectModule",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "metadata",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "CollectModuleRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pubId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "collectNFT",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "CollectNFTDeployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "collectedProfileId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "collectedPubId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "collectorProfileId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "nftRecipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "collectActionData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "collectActionResult",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "collectNFT",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "transactionExecutor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Collected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "COLLECT_NFT_IMPL",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "HUB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pubId",
        type: "uint256",
      },
    ],
    name: "getCollectData",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "collectModule",
            type: "address",
          },
          {
            internalType: "address",
            name: "collectNFT",
            type: "address",
          },
        ],
        internalType: "struct CollectPublicationAction.CollectData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getModuleMetadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "moduleOwner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pubId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "transactionExecutor",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "initializePublicationAction",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collectModule",
        type: "address",
      },
    ],
    name: "isCollectModuleRegistered",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "metadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "publicationActedProfileId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "publicationActedId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "actorProfileId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "actorProfileOwner",
            type: "address",
          },
          {
            internalType: "address",
            name: "transactionExecutor",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "referrerProfileIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "referrerPubIds",
            type: "uint256[]",
          },
          {
            internalType: "enum Types.PublicationType[]",
            name: "referrerPubTypes",
            type: "uint8[]",
          },
          {
            internalType: "bytes",
            name: "actionModuleData",
            type: "bytes",
          },
        ],
        internalType: "struct Types.ProcessActionParams",
        name: "processActionParams",
        type: "tuple",
      },
    ],
    name: "processPublicationAction",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collectModule",
        type: "address",
      },
    ],
    name: "registerCollectModule",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_metadataURI",
        type: "string",
      },
    ],
    name: "setModuleMetadataURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceID",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collectModule",
        type: "address",
      },
    ],
    name: "verifyCollectModule",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type CollectPublicationActionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CollectPublicationActionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CollectPublicationAction__factory extends ContractFactory {
  constructor(...args: CollectPublicationActionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    hub: string,
    collectNFTImpl: string,
    moduleOwner: string,
    overrides?: Overrides & { from?: string }
  ): Promise<CollectPublicationAction> {
    return super.deploy(
      hub,
      collectNFTImpl,
      moduleOwner,
      overrides || {}
    ) as Promise<CollectPublicationAction>;
  }
  override getDeployTransaction(
    hub: string,
    collectNFTImpl: string,
    moduleOwner: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      hub,
      collectNFTImpl,
      moduleOwner,
      overrides || {}
    );
  }
  override attach(address: string): CollectPublicationAction {
    return super.attach(address) as CollectPublicationAction;
  }
  override connect(signer: Signer): CollectPublicationAction__factory {
    return super.connect(signer) as CollectPublicationAction__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CollectPublicationActionInterface {
    return new utils.Interface(_abi) as CollectPublicationActionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CollectPublicationAction {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CollectPublicationAction;
  }
}
