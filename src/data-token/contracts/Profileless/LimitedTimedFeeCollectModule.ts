/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../common";

export type ProfilePublicationDataStruct = {
  collectLimit: BigNumberish;
  currentCollects: BigNumberish;
  amount: BigNumberish;
  currency: string;
  recipient: string;
  endTimestamp: BigNumberish;
};

export type ProfilePublicationDataStructOutput = [
  BigNumber,
  BigNumber,
  BigNumber,
  string,
  string,
  number
] & {
  collectLimit: BigNumber;
  currentCollects: BigNumber;
  amount: BigNumber;
  currency: string;
  recipient: string;
  endTimestamp: number;
};

export interface LimitedTimedFeeCollectModuleInterface extends utils.Interface {
  functions: {
    "getPublicationData(uint256)": FunctionFragment;
    "initializePublicationCollectModule(uint256,bytes)": FunctionFragment;
    "processCollect(uint256,address,bytes)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "getPublicationData"
      | "initializePublicationCollectModule"
      | "processCollect"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "getPublicationData",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "initializePublicationCollectModule",
    values: [BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "processCollect",
    values: [BigNumberish, string, BytesLike]
  ): string;

  decodeFunctionResult(
    functionFragment: "getPublicationData",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "initializePublicationCollectModule",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "processCollect",
    data: BytesLike
  ): Result;

  events: {};
}

export interface LimitedTimedFeeCollectModule extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: LimitedTimedFeeCollectModuleInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    getPublicationData(
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[ProfilePublicationDataStructOutput]>;

    initializePublicationCollectModule(
      pubId: BigNumberish,
      data: BytesLike,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    processCollect(
      pubId: BigNumberish,
      collector: string,
      data: BytesLike,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;
  };

  getPublicationData(
    pubId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<ProfilePublicationDataStructOutput>;

  initializePublicationCollectModule(
    pubId: BigNumberish,
    data: BytesLike,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  processCollect(
    pubId: BigNumberish,
    collector: string,
    data: BytesLike,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  callStatic: {
    getPublicationData(
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<ProfilePublicationDataStructOutput>;

    initializePublicationCollectModule(
      pubId: BigNumberish,
      data: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    processCollect(
      pubId: BigNumberish,
      collector: string,
      data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    getPublicationData(
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    initializePublicationCollectModule(
      pubId: BigNumberish,
      data: BytesLike,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    processCollect(
      pubId: BigNumberish,
      collector: string,
      data: BytesLike,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getPublicationData(
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    initializePublicationCollectModule(
      pubId: BigNumberish,
      data: BytesLike,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    processCollect(
      pubId: BigNumberish,
      collector: string,
      data: BytesLike,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;
  };
}
