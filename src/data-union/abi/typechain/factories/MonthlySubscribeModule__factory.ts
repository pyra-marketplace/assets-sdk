/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MonthlySubscribeModule,
  MonthlySubscribeModuleInterface,
} from "../MonthlySubscribeModule";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "subscribeAction",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidDate",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitParams",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSubscriptionDuration",
    type: "error",
  },
  {
    inputs: [],
    name: "ModuleDataMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "NotSubscribeAction",
    type: "error",
  },
  {
    inputs: [],
    name: "SUBSCRIBE_ACTION",
    outputs: [
      {
        internalType: "contract SubscribeAction",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "assetId",
        type: "bytes32",
      },
    ],
    name: "getAssetSubscribeDetail",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct AssetSubscribeDetail",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "assetId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "initializeSubscribeModule",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "assetId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "subscriber",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "processSubscribe",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161166e38038061166e83398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b6080516115ba6100b46000396000818160d1015281816101c70152818161027d01528181610487015281816107710152818161083c015261091201526115ba6000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806301ffc9a71461005c57806366265b161461008457806369f577d9146100ac57806390761a57146100cc578063e8b5aafc1461010b575b600080fd5b61006f61006a366004610eef565b610182565b60405190151581526020015b60405180910390f35b610097610092366004610fc9565b6101b9565b6040805192835260208301919091520161007b565b6100bf6100ba366004611065565b61047a565b60405161007b9190611131565b6100f37f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161007b565b61015e610119366004611144565b60408051808201909152600080825260208201525060009081526020818152604091829020825180840190935280546001600160a01b03168352600101549082015290565b6040805182516001600160a01b03168152602092830151928101929092520161007b565b60006001600160e01b03198216630fd32ccf60e01b14806101b357506301ffc9a760e01b6001600160e01b03198316145b92915050565b600080336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102055760405163ddf89bc160e01b815260040160405180910390fd5b600085815260208181526040822085519092918291829161022c918901810190890161115d565b92509250925061023e83836001610546565b61025b576040516381bf7f6760e01b815260040160405180910390fd5b60006102698484600161059c565b9050600061027782846105bf565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166379e559366040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fd919061118b565b6001600160a01b031663570fed0f8d6040518263ffffffff1660e01b815260040161032a91815260200190565b600060405180830381865afa158015610347573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261036f91908101906112db565b9050428311806103825750806020015182105b8061039b575080602001516103988460016105bf565b11155b806103b4575080604001516103b1836001610696565b10155b156103d257604051631020ebb760e11b815260040160405180910390fd5b8654600188015460009182916103f5918f916001600160a01b039091169061076a565b905060006104208f8f8c60000160009054906101000a90046001600160a01b03168d60010154610835565b905080828b6001015461043391906113c4565b61043d91906113c4565b92505081159050610468576104688c6104558f61090e565b8a546001600160a01b0316919084610a02565b50919b909a5098505050505050505050565b6060336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104c55760405163ddf89bc160e01b815260040160405180910390fd5b6000806104d4848601866113d7565b6000888152602081815260409182902080546001600160a01b0319166001600160a01b0386161781556001018390558151601f890182900482028101820190925287825292945090925090869086908190840183828082843760009201919091525092955050505050505b9392505050565b60006107b2841015801561055a5750600083115b80156105675750600c8311155b1561053f5760006105788585610a62565b905060008311801561058a5750808311155b1561059457600191505b509392505050565b6000620151806105ad858585610ae8565b6105b79190611403565b949350505050565b60008080806105d96105d46201518088611430565b610c25565b919450925090506105ea8583611444565b9150600c6105f96001846113c4565b6106039190611430565b61060d9084611444565b9250600c61061c6001846113c4565b6106269190611457565b610631906001611444565b9150600061063f8484610a62565b90508082111561064d578091505b61065a6201518088611457565b62015180610669868686610ae8565b6106739190611403565b61067d9190611444565b94508685101561068c57600080fd5b5050505092915050565b60008080806106ab6105d46201518088611430565b919450925090506000856106c06001856113c4565b6106cb86600c611403565b6106d59190611444565b6106df91906113c4565b90506106ec600c82611430565b93506106f9600c82611457565b610704906001611444565b925060006107128585610a62565b905080831115610720578092505b61072d6201518089611457565b6201518061073c878787610ae8565b6107469190611403565b6107509190611444565b95508786111561075f57600080fd5b505050505092915050565b60008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166320dd9ac26040518163ffffffff1660e01b81526004016040805180830381865afa1580156107cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f0919061146b565b909250905060006127106108048387611403565b61080e9190611430565b9050801561082b5761082b6001600160a01b038716888584610a02565b9695505050505050565b60008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166395197b51886040518263ffffffff1660e01b815260040161088891815260200190565b6040805180830381865afa1580156108a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c8919061146b565b909250905060006127106108dc8387611403565b6108e69190611430565b90508015610903576109036001600160a01b038716888584610a02565b979650505050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166379e559366040518163ffffffff1660e01b8152600401602060405180830381865afa15801561096e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610992919061118b565b6001600160a01b03166335d8c2b7836040518263ffffffff1660e01b81526004016109bf91815260200190565b6020604051808303816000875af11580156109de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b3919061118b565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052610a5c908590610cc1565b50505050565b60008160011480610a735750816003145b80610a7e5750816005145b80610a895750816007145b80610a945750816008145b80610a9f575081600a145b80610aaa575081600c145b15610ab75750601f6101b3565b81600214610ac75750601e6101b3565b610ad083610da0565b610adb57601c610ade565b601d5b60ff169392505050565b60006107b2841015610af957600080fd5b838383600062253d8c60046064600c610b13600e88611499565b610b1d91906114c0565b610b29886113246114ee565b610b3391906114ee565b610b3d91906114c0565b610b48906003611516565b610b5291906114c0565b600c80610b60600e88611499565b610b6a91906114c0565b610b7590600c611516565b610b80600288611499565b610b8a9190611499565b610b969061016f611516565b610ba091906114c0565b6004600c610baf600e89611499565b610bb991906114c0565b610bc5896112c06114ee565b610bcf91906114ee565b610bdb906105b5611516565b610be591906114c0565b610bf1617d4b87611499565b610bfb91906114ee565b610c0591906114ee565b610c0f9190611499565b610c199190611499565b98975050505050505050565b60008080836226496581018262023ab1600483020590506004600362023ab18302010590910390600062164b09610fa0600185010205905060046105b58202058303601f019250600061098f8460500281610c8257610c8261141a565b0590506000605061098f83020585039050600b820560301994909401606402929092018301996002600c90940290910392909201975095509350505050565b6000610d16826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610ddc9092919063ffffffff16565b9050805160001480610d37575080806020019051810190610d379190611546565b610d9b5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084015b60405180910390fd5b505050565b6000610dad600483611457565b158015610dc35750610dc0606483611457565b15155b806101b35750610dd561019083611457565b1592915050565b60606105b7848460008585600080866001600160a01b03168587604051610e039190611568565b60006040518083038185875af1925050503d8060008114610e40576040519150601f19603f3d011682016040523d82523d6000602084013e610e45565b606091505b50915091506109038783838760608315610ec0578251600003610eb9576001600160a01b0385163b610eb95760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610d92565b50816105b7565b6105b78383815115610ed55781518083602001fd5b8060405162461bcd60e51b8152600401610d929190611131565b600060208284031215610f0157600080fd5b81356001600160e01b03198116811461053f57600080fd5b6001600160a01b0381168114610f2e57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715610f6a57610f6a610f31565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610f9957610f99610f31565b604052919050565b600067ffffffffffffffff821115610fbb57610fbb610f31565b50601f01601f191660200190565b600080600060608486031215610fde57600080fd5b833592506020840135610ff081610f19565b9150604084013567ffffffffffffffff81111561100c57600080fd5b8401601f8101861361101d57600080fd5b803561103061102b82610fa1565b610f70565b81815287602083850101111561104557600080fd5b816020840160208301376000602083830101528093505050509250925092565b60008060006040848603121561107a57600080fd5b83359250602084013567ffffffffffffffff8082111561109957600080fd5b818601915086601f8301126110ad57600080fd5b8135818111156110bc57600080fd5b8760208285010111156110ce57600080fd5b6020830194508093505050509250925092565b60005b838110156110fc5781810151838201526020016110e4565b50506000910152565b6000815180845261111d8160208601602086016110e1565b601f01601f19169290920160200192915050565b60208152600061053f6020830184611105565b60006020828403121561115657600080fd5b5035919050565b60008060006060848603121561117257600080fd5b8351925060208401519150604084015190509250925092565b60006020828403121561119d57600080fd5b815161053f81610f19565b600082601f8301126111b957600080fd5b81516111c761102b82610fa1565b8181528460208386010111156111dc57600080fd5b6105b78260208301602087016110e1565b600067ffffffffffffffff82111561120757611207610f31565b5060051b60200190565b600082601f83011261122257600080fd5b8151602061123261102b836111ed565b82815260059290921b8401810191818101908684111561125157600080fd5b8286015b8481101561127557805161126881610f19565b8352918301918301611255565b509695505050505050565b600082601f83011261129157600080fd5b815160206112a161102b836111ed565b82815260059290921b840181019181810190868411156112c057600080fd5b8286015b8481101561127557805183529183019183016112c4565b6000602082840312156112ed57600080fd5b815167ffffffffffffffff8082111561130557600080fd5b9083019060c0828603121561131957600080fd5b611321610f47565b82518281111561133057600080fd5b61133c878286016111a8565b82525060208301516020820152604083015160408201526060830151606082015260808301518281111561136f57600080fd5b61137b87828601611211565b60808301525060a08301518281111561139357600080fd5b61139f87828601611280565b60a08301525095945050505050565b634e487b7160e01b600052601160045260246000fd5b818103818111156101b3576101b36113ae565b600080604083850312156113ea57600080fd5b82356113f581610f19565b946020939093013593505050565b80820281158282048414176101b3576101b36113ae565b634e487b7160e01b600052601260045260246000fd5b60008261143f5761143f61141a565b500490565b808201808211156101b3576101b36113ae565b6000826114665761146661141a565b500690565b6000806040838503121561147e57600080fd5b825161148981610f19565b6020939093015192949293505050565b81810360008312801583831316838312821617156114b9576114b96113ae565b5092915050565b6000826114cf576114cf61141a565b600160ff1b8214600019841416156114e9576114e96113ae565b500590565b808201828112600083128015821682158216171561150e5761150e6113ae565b505092915050565b80820260008212600160ff1b84141615611532576115326113ae565b81810583148215176101b3576101b36113ae565b60006020828403121561155857600080fd5b8151801515811461053f57600080fd5b6000825161157a8184602087016110e1565b919091019291505056fea26469706673582212201bcdca925b7346a7f4d8bcdb97391ef30b152781410da2eb23399cbe055ff51864736f6c63430008150033";

type MonthlySubscribeModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MonthlySubscribeModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MonthlySubscribeModule__factory extends ContractFactory {
  constructor(...args: MonthlySubscribeModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    subscribeAction: string,
    overrides?: Overrides & { from?: string }
  ): Promise<MonthlySubscribeModule> {
    return super.deploy(
      subscribeAction,
      overrides || {}
    ) as Promise<MonthlySubscribeModule>;
  }
  override getDeployTransaction(
    subscribeAction: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(subscribeAction, overrides || {});
  }
  override attach(address: string): MonthlySubscribeModule {
    return super.attach(address) as MonthlySubscribeModule;
  }
  override connect(signer: Signer): MonthlySubscribeModule__factory {
    return super.connect(signer) as MonthlySubscribeModule__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MonthlySubscribeModuleInterface {
    return new utils.Interface(_abi) as MonthlySubscribeModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MonthlySubscribeModule {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MonthlySubscribeModule;
  }
}
