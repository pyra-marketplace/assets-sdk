/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MonthlySubscribeModule,
  MonthlySubscribeModuleInterface,
} from "../MonthlySubscribeModule";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "subscribeAction",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidDate",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitParams",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSubscriptionDuration",
    type: "error",
  },
  {
    inputs: [],
    name: "ModuleDataMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "NotSubscribeAction",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    inputs: [],
    name: "SUBSCRIBE_ACTION",
    outputs: [
      {
        internalType: "contract SubscribeAction",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "assetId",
        type: "bytes32",
      },
    ],
    name: "getAssetSubscribeDetail",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct AssetSubscribeDetail",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "assetId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "initializeSubscribeModule",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "assetId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "subscriber",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "processSubscribe",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161158438038061158483398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b6080516114d06100b46000396000818160d1015281816101c70152818161027d015281816104a8015281816107920152818161085d015261093301526114d06000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806301ffc9a71461005c57806366265b161461008457806369f577d9146100ac57806390761a57146100cc578063e8b5aafc1461010b575b600080fd5b61006f61006a366004610e84565b610182565b60405190151581526020015b60405180910390f35b610097610092366004610f5b565b6101b9565b6040805192835260208301919091520161007b565b6100bf6100ba366004610ff7565b61049b565b60405161007b9190611097565b6100f37f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161007b565b61015e6101193660046110ca565b60408051808201909152600080825260208201525060009081526020818152604091829020825180840190935280546001600160a01b03168352600101549082015290565b6040805182516001600160a01b03168152602092830151928101929092520161007b565b60006001600160e01b03198216630fd32ccf60e01b14806101b357506301ffc9a760e01b6001600160e01b03198316145b92915050565b600080336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102055760405163ddf89bc160e01b815260040160405180910390fd5b600085815260208181526040822085519092918291829161022c91890181019089016110e3565b92509250925061023e83836001610567565b61025b576040516381bf7f6760e01b815260040160405180910390fd5b6000610269848460016105bd565b9050600061027782846105e0565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166379e559366040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fd9190611111565b6001600160a01b031663570fed0f8d6040518263ffffffff1660e01b815260040161032a91815260200190565b600060405180830381865afa158015610347573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261036f91908101906111f1565b9050428311806103825750806040015182105b8061039b575080604001516103988460016105e0565b11155b806103b4575080606001516103b18360016106b7565b10155b156103d257604051631020ebb760e11b815260040160405180910390fd5b865460018801546000918291610400918f916001600160a01b03909116906103fb908a906112da565b61078b565b905060006104368f8f8c60000160009054906101000a90046001600160a01b03168a8e6001015461043191906112da565b610856565b90508082888c6001015461044a91906112da565b61045491906112f1565b61045e91906112f1565b92505081159050610489576104898c6104768f61092f565b8a546001600160a01b0316919084610a21565b50919b909a5098505050505050505050565b6060336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104e65760405163ddf89bc160e01b815260040160405180910390fd5b6000806104f584860186611304565b6000888152602081815260409182902080546001600160a01b0319166001600160a01b0386161781556001018390558151601f890182900482028101820190925287825292945090925090869086908190840183828082843760009201919091525092955050505050505b9392505050565b60006107b2841015801561057b5750600083115b80156105885750600c8311155b156105605760006105998585610a81565b90506000831180156105ab5750808311155b156105b557600191505b509392505050565b6000620151806105ce858585610b07565b6105d891906112da565b949350505050565b60008080806105fa6105f56201518088611346565b610c44565b9194509250905061060b858361135a565b9150600c61061a6001846112f1565b6106249190611346565b61062e908461135a565b9250600c61063d6001846112f1565b610647919061136d565b61065290600161135a565b915060006106608484610a81565b90508082111561066e578091505b61067b620151808861136d565b6201518061068a868686610b07565b61069491906112da565b61069e919061135a565b9450868510156106ad57600080fd5b5050505092915050565b60008080806106cc6105f56201518088611346565b919450925090506000856106e16001856112f1565b6106ec86600c6112da565b6106f6919061135a565b61070091906112f1565b905061070d600c82611346565b935061071a600c8261136d565b61072590600161135a565b925060006107338585610a81565b905080831115610741578092505b61074e620151808961136d565b6201518061075d878787610b07565b61076791906112da565b610771919061135a565b95508786111561078057600080fd5b505050505092915050565b60008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633532d0e56040518163ffffffff1660e01b81526004016040805180830381865afa1580156107ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108119190611381565b9092509050600061271061082583876112da565b61082f9190611346565b9050801561084c5761084c6001600160a01b038716888584610a21565b9695505050505050565b60008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166395197b51886040518263ffffffff1660e01b81526004016108a991815260200190565b6040805180830381865afa1580156108c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e99190611381565b909250905060006127106108fd83876112da565b6109079190611346565b90508015610924576109246001600160a01b038716888584610a21565b979650505050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166379e559366040518163ffffffff1660e01b8152600401602060405180830381865afa15801561098f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b39190611111565b6001600160a01b03166335d8c2b7836040518263ffffffff1660e01b81526004016109e091815260200190565b602060405180830381865afa1580156109fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b39190611111565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052610a7b908590610ce0565b50505050565b60008160011480610a925750816003145b80610a9d5750816005145b80610aa85750816007145b80610ab35750816008145b80610abe575081600a145b80610ac9575081600c145b15610ad65750601f6101b3565b81600214610ae65750601e6101b3565b610aef83610d4d565b610afa57601c610afd565b601d5b60ff169392505050565b60006107b2841015610b1857600080fd5b838383600062253d8c60046064600c610b32600e886113af565b610b3c91906113d6565b610b4888611324611404565b610b529190611404565b610b5c91906113d6565b610b6790600361142c565b610b7191906113d6565b600c80610b7f600e886113af565b610b8991906113d6565b610b9490600c61142c565b610b9f6002886113af565b610ba991906113af565b610bb59061016f61142c565b610bbf91906113d6565b6004600c610bce600e896113af565b610bd891906113d6565b610be4896112c0611404565b610bee9190611404565b610bfa906105b561142c565b610c0491906113d6565b610c10617d4b876113af565b610c1a9190611404565b610c249190611404565b610c2e91906113af565b610c3891906113af565b98975050505050505050565b60008080836226496581018262023ab1600483020590506004600362023ab18302010590910390600062164b09610fa0600185010205905060046105b58202058303601f019250600061098f8460500281610ca157610ca1611330565b0590506000605061098f83020585039050600b820560301994909401606402929092018301996002600c90940290910392909201975095509350505050565b6000610cf56001600160a01b03841683610d89565b90508051600014158015610d1a575080806020019051810190610d18919061145c565b155b15610d4857604051635274afe760e01b81526001600160a01b03841660048201526024015b60405180910390fd5b505050565b6000610d5a60048361136d565b158015610d705750610d6d60648361136d565b15155b806101b35750610d826101908361136d565b1592915050565b60606105608383600084600080856001600160a01b03168486604051610daf919061147e565b60006040518083038185875af1925050503d8060008114610dec576040519150601f19603f3d011682016040523d82523d6000602084013e610df1565b606091505b509150915061084c868383606082610e1157610e0c82610e58565b610560565b8151158015610e2857506001600160a01b0384163b155b15610e5157604051639996b31560e01b81526001600160a01b0385166004820152602401610d3f565b5080610560565b805115610e685780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b50565b600060208284031215610e9657600080fd5b81356001600160e01b03198116811461056057600080fd5b6001600160a01b0381168114610e8157600080fd5b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715610efc57610efc610ec3565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610f2b57610f2b610ec3565b604052919050565b600067ffffffffffffffff821115610f4d57610f4d610ec3565b50601f01601f191660200190565b600080600060608486031215610f7057600080fd5b833592506020840135610f8281610eae565b9150604084013567ffffffffffffffff811115610f9e57600080fd5b8401601f81018613610faf57600080fd5b8035610fc2610fbd82610f33565b610f02565b818152876020838501011115610fd757600080fd5b816020840160208301376000602083830101528093505050509250925092565b60008060006040848603121561100c57600080fd5b83359250602084013567ffffffffffffffff8082111561102b57600080fd5b818601915086601f83011261103f57600080fd5b81358181111561104e57600080fd5b87602082850101111561106057600080fd5b6020830194508093505050509250925092565b60005b8381101561108e578181015183820152602001611076565b50506000910152565b60208152600082518060208401526110b6816040850160208701611073565b601f01601f19169190910160400192915050565b6000602082840312156110dc57600080fd5b5035919050565b6000806000606084860312156110f857600080fd5b8351925060208401519150604084015190509250925092565b60006020828403121561112357600080fd5b815161056081610eae565b600082601f83011261113f57600080fd5b815161114d610fbd82610f33565b81815284602083860101111561116257600080fd5b6105d8826020830160208701611073565b600082601f83011261118457600080fd5b8151602067ffffffffffffffff8211156111a0576111a0610ec3565b8160051b6111af828201610f02565b92835284810182019282810190878511156111c957600080fd5b83870192505b848310156109245782516111e281610eae565b825291830191908301906111cf565b60006020828403121561120357600080fd5b815167ffffffffffffffff8082111561121b57600080fd5b9083019060c0828603121561122f57600080fd5b611237610ed9565b82518281111561124657600080fd5b6112528782860161112e565b82525060208301518281111561126757600080fd5b6112738782860161112e565b60208301525060408301516040820152606083015160608201526080830151608082015260a0830151828111156112a957600080fd5b6112b587828601611173565b60a08301525095945050505050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176101b3576101b36112c4565b818103818111156101b3576101b36112c4565b6000806040838503121561131757600080fd5b823561132281610eae565b946020939093013593505050565b634e487b7160e01b600052601260045260246000fd5b60008261135557611355611330565b500490565b808201808211156101b3576101b36112c4565b60008261137c5761137c611330565b500690565b6000806040838503121561139457600080fd5b825161139f81610eae565b6020939093015192949293505050565b81810360008312801583831316838312821617156113cf576113cf6112c4565b5092915050565b6000826113e5576113e5611330565b600160ff1b8214600019841416156113ff576113ff6112c4565b500590565b8082018281126000831280158216821582161715611424576114246112c4565b505092915050565b80820260008212600160ff1b84141615611448576114486112c4565b81810583148215176101b3576101b36112c4565b60006020828403121561146e57600080fd5b8151801515811461056057600080fd5b60008251611490818460208701611073565b919091019291505056fea2646970667358221220aa8e43ea0f4609200d14de834025a69ae2eec28903045cd79a30ea122b55a8ff64736f6c63430008150033";

type MonthlySubscribeModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MonthlySubscribeModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MonthlySubscribeModule__factory extends ContractFactory {
  constructor(...args: MonthlySubscribeModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    subscribeAction: string,
    overrides?: Overrides & { from?: string }
  ): Promise<MonthlySubscribeModule> {
    return super.deploy(
      subscribeAction,
      overrides || {}
    ) as Promise<MonthlySubscribeModule>;
  }
  override getDeployTransaction(
    subscribeAction: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(subscribeAction, overrides || {});
  }
  override attach(address: string): MonthlySubscribeModule {
    return super.attach(address) as MonthlySubscribeModule;
  }
  override connect(signer: Signer): MonthlySubscribeModule__factory {
    return super.connect(signer) as MonthlySubscribeModule__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MonthlySubscribeModuleInterface {
    return new utils.Interface(_abi) as MonthlySubscribeModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MonthlySubscribeModule {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MonthlySubscribeModule;
  }
}
