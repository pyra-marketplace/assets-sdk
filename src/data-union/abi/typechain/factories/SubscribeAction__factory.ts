/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SubscribeAction,
  SubscribeActionInterface,
} from "../SubscribeAction";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "actionConfig",
        type: "address",
      },
      {
        internalType: "address",
        name: "collectAction",
        type: "address",
      },
      {
        internalType: "address",
        name: "monetizer",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CollectTokenNotEnumberable",
    type: "error",
  },
  {
    inputs: [],
    name: "CollectTokenNotOwned",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMonetizer",
    type: "error",
  },
  {
    inputs: [],
    name: "NotCollected",
    type: "error",
  },
  {
    inputs: [],
    name: "NotSubscribeModule",
    type: "error",
  },
  {
    inputs: [],
    name: "SubscribeModuleAlreadyRegistered",
    type: "error",
  },
  {
    inputs: [],
    name: "SubscribeModuleNotRegistered",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "ACTION_CONFIG",
    outputs: [
      {
        internalType: "contract ActionConfig",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "COLLECT_ACTION",
    outputs: [
      {
        internalType: "contract CollectAction",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "assetId",
        type: "bytes32",
      },
    ],
    name: "getDappTreasuryData",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDataverseTreasuryData",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "assetId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "collectionId",
        type: "uint256",
      },
    ],
    name: "getSubscribeData",
    outputs: [
      {
        internalType: "uint256[2][]",
        name: "",
        type: "uint256[2][]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "assetId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "initializeAction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "assetId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "collectionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "isAccessible",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "assetId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "isAccessible",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isSubscribeModuleRegistered",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "monetizer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "assetId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "subscriber",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "processAction",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "subscribeModule",
        type: "address",
      },
    ],
    name: "registerSubscribeModule",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620018c5380380620018c58339810160408190526200003491620000ed565b8281620000413362000080565b600180546001600160a01b03199081166001600160a01b0394851617909155600280549091169183169190911790559190911660805250620001379050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b0381168114620000e857600080fd5b919050565b6000806000606084860312156200010357600080fd5b6200010e84620000d0565b92506200011e60208501620000d0565b91506200012e60408501620000d0565b90509250925092565b6080516117566200016f600039600081816101ba015281816106bb0152818161074c0152818161094401526109e401526117566000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80638da5cb5b11610097578063ce79d4bd11610066578063ce79d4bd14610243578063d9c2596714610263578063db86aeea14610283578063f2fde38b1461029657600080fd5b80638da5cb5b146101f957806395197b511461020a578063b0c8e77f1461021d578063c0e26b4e1461023057600080fd5b806369288f83116100d357806369288f831461018a5780636fad6087146101b5578063715018a6146101dc57806379e55936146101e657600080fd5b806301ffc9a71461010557806317ea5bf91461012d5780631dfda6ce1461015057806320dd9ac214610163575b600080fd5b610118610113366004610ef5565b6102a9565b60405190151581526020015b60405180910390f35b61011861013b366004610f34565b60036020526000908152604090205460ff1681565b61011861015e366004610f51565b6102e0565b61016b610426565b604080516001600160a01b039093168352602083019190915201610124565b60015461019d906001600160a01b031681565b6040516001600160a01b039091168152602001610124565b61019d7f000000000000000000000000000000000000000000000000000000000000000081565b6101e461049c565b005b60025461019d906001600160a01b031681565b6000546001600160a01b031661019d565b61016b610218366004610f7d565b6104b0565b6101e461022b366004610f34565b6105a8565b61011861023e366004610f96565b610692565b610256610251366004611017565b6108f0565b60405161012491906110c3565b6102766102713660046110d6565b610c09565b60405161012491906110f8565b6101e4610291366004611161565b610c9b565b6101e46102a4366004610f34565b610d7a565b60006001600160e01b0319821663280ee6f160e21b14806102da57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000428211156102f25750600061041f565b6000848152600460209081526040808320868452825280832080548251818502810185019093528083529192909190849084015b828210156103765760008481526020902060408051808201918290529160028581029091019182845b81548152602001906001019080831161034f57505050505081526020019060010190610326565b50505050905060005b81518110156104185781818151811061039a5761039a6111ad565b60200260200101516000600281106103b4576103b46111ad565b602002015184101580156103f857508181815181106103d5576103d56111ad565b60200260200101516001600281106103ef576103ef6111ad565b60200201518411155b156104085760019250505061041f565b610411816111c3565b905061037f565b5060009150505b9392505050565b6001546040805163106ecd6160e11b8152815160009384936001600160a01b03909116926320dd9ac292600480830193928290030181865afa158015610470573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049491906111ea565b915091509091565b6104a4610df8565b6104ae6000610e52565b565b6002546040516259879d60e71b815260048101839052600091829182916001600160a01b031690632cc3ce8090602401600060405180830381865afa1580156104fd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261052591908101906113f0565b6001548151604080840151905163221dee9160e21b81529394506001600160a01b0390921692638877ba449261055e92916004016114dd565b6040805180830381865afa15801561057a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059e91906111ea565b9250925050915091565b6001600160a01b03811660009081526003602052604090205460ff16156105e257604051634913a52560e01b815260040160405180910390fd5b6040516301ffc9a760e01b8152630fd32ccf60e01b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa15801561062d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065191906114ff565b61066e57604051634bbd89fb60e11b815260040160405180910390fd5b6001600160a01b03166000908152600360205260409020805460ff19166001179055565b60405163375326d360e21b8152600481018490526001600160a01b0383811660248301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063dd4c9b4c90604401602060405180830381865afa158015610704573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072891906114ff565b6107345750600061041f565b60405162b2a76b60e01b8152600481018590526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169062b2a76b906024016040805180830381865afa158015610799573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107bd9190611521565b602001516040516370a0823160e01b81526001600160a01b0386811660048301529192506000918316906370a0823190602401602060405180830381865afa15801561080d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108319190611580565b905060005b818110156108e357604051632f745c5960e01b81526001600160a01b0387811660048301526024820183905260009190851690632f745c5990604401602060405180830381865afa15801561088f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b39190611580565b90506108c08882886102e0565b156108d257600194505050505061041f565b506108dc816111c3565b9050610836565b5060009695505050505050565b6002546060906001600160a01b0316331461091e57604051636a429a5960e01b815260040160405180910390fd5b60405163375326d360e21b8152600481018690526001600160a01b0385811660248301527f0000000000000000000000000000000000000000000000000000000000000000169063dd4c9b4c90604401602060405180830381865afa15801561098b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109af91906114ff565b156109cc576040516272cd0960e31b815260040160405180910390fd5b60405162b2a76b60e01b8152600481018690526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169062b2a76b906024016040805180830381865afa158015610a31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a559190611521565b60200151905060008080610a6b868801886115ea565b925092509250876001600160a01b0316846001600160a01b0316636352211e856040518263ffffffff1660e01b8152600401610aa991815260200190565b602060405180830381865afa158015610ac6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aea9190611643565b6001600160a01b031614610b1157604051630c80c90960e21b815260040160405180910390fd5b600080836001600160a01b03166366265b168c8c866040518463ffffffff1660e01b8152600401610b4493929190611660565b60408051808303816000875af1158015610b62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b869190611693565b60008d81526004602090815260408083208a845282528083208151808301909252858252818301859052805460018101825590845291909220939550919350610bd59260029283020191610ea2565b5060408051602081018490529081018290526060016040516020818303038152906040529650505050505050949350505050565b60008281526004602090815260408083208484528252808320805482518185028101850190935280835260609492939192909184015b82821015610c8f5760008481526020902060408051808201918290529160028581029091019182845b815481526020019060010190808311610c6857505050505081526020019060010190610c3f565b50505050905092915050565b6002546001600160a01b03163314610cc657604051636a429a5960e01b815260040160405180910390fd5b600080610cd5838501856116b7565b6001600160a01b038216600090815260036020526040902054919350915060ff16610d1357604051632abf965d60e11b815260040160405180910390fd5b6040516369f577d960e01b81526001600160a01b038316906369f577d990610d419088908590600401611707565b600060405180830381600087803b158015610d5b57600080fd5b505af1158015610d6f573d6000803e3d6000fd5b505050505050505050565b610d82610df8565b6001600160a01b038116610dec5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b610df581610e52565b50565b6000546001600160a01b031633146104ae5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610de3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8260028101928215610ed0579160200282015b82811115610ed0578251825591602001919060010190610eb5565b50610edc929150610ee0565b5090565b5b80821115610edc5760008155600101610ee1565b600060208284031215610f0757600080fd5b81356001600160e01b03198116811461041f57600080fd5b6001600160a01b0381168114610df557600080fd5b600060208284031215610f4657600080fd5b813561041f81610f1f565b600080600060608486031215610f6657600080fd5b505081359360208301359350604090920135919050565b600060208284031215610f8f57600080fd5b5035919050565b600080600060608486031215610fab57600080fd5b833592506020840135610fbd81610f1f565b929592945050506040919091013590565b60008083601f840112610fe057600080fd5b50813567ffffffffffffffff811115610ff857600080fd5b60208301915083602082850101111561101057600080fd5b9250929050565b6000806000806060858703121561102d57600080fd5b84359350602085013561103f81610f1f565b9250604085013567ffffffffffffffff81111561105b57600080fd5b61106787828801610fce565b95989497509550505050565b60005b8381101561108e578181015183820152602001611076565b50506000910152565b600081518084526110af816020860160208601611073565b601f01601f19169290920160200192915050565b60208152600061041f6020830184611097565b600080604083850312156110e957600080fd5b50508035926020909101359150565b60208082528251828201819052600091906040908185019086840185805b8381101561115357825185835b600281101561114057825182529189019190890190600101611123565b5050509385019391860191600101611116565b509298975050505050505050565b60008060006040848603121561117657600080fd5b83359250602084013567ffffffffffffffff81111561119457600080fd5b6111a086828701610fce565b9497909650939450505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016111e357634e487b7160e01b600052601160045260246000fd5b5060010190565b600080604083850312156111fd57600080fd5b825161120881610f1f565b6020939093015192949293505050565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff8111828210171561125157611251611218565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561128057611280611218565b604052919050565b600067ffffffffffffffff8211156112a2576112a2611218565b50601f01601f191660200190565b600082601f8301126112c157600080fd5b81516112d46112cf82611288565b611257565b8181528460208386010111156112e957600080fd5b6112fa826020830160208701611073565b949350505050565b600067ffffffffffffffff82111561131c5761131c611218565b5060051b60200190565b600082601f83011261133757600080fd5b815160206113476112cf83611302565b82815260059290921b8401810191818101908684111561136657600080fd5b8286015b8481101561138a57805161137d81610f1f565b835291830191830161136a565b509695505050505050565b600082601f8301126113a657600080fd5b815160206113b66112cf83611302565b82815260059290921b840181019181810190868411156113d557600080fd5b8286015b8481101561138a57805183529183019183016113d9565b60006020828403121561140257600080fd5b815167ffffffffffffffff8082111561141a57600080fd5b9083019060c0828603121561142e57600080fd5b61143661122e565b82518281111561144557600080fd5b611451878286016112b0565b82525060208301518281111561146657600080fd5b611472878286016112b0565b602083015250604083015160408201526060830151606082015260808301518281111561149e57600080fd5b6114aa87828601611326565b60808301525060a0830151828111156114c257600080fd5b6114ce87828601611395565b60a08301525095945050505050565b6040815260006114f06040830185611097565b90508260208301529392505050565b60006020828403121561151157600080fd5b8151801515811461041f57600080fd5b60006040828403121561153357600080fd5b6040516040810181811067ffffffffffffffff8211171561155657611556611218565b604052825161156481610f1f565b8152602083015161157481610f1f565b60208201529392505050565b60006020828403121561159257600080fd5b5051919050565b600082601f8301126115aa57600080fd5b81356115b86112cf82611288565b8181528460208386010111156115cd57600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000606084860312156115ff57600080fd5b83359250602084013561161181610f1f565b9150604084013567ffffffffffffffff81111561162d57600080fd5b61163986828701611599565b9150509250925092565b60006020828403121561165557600080fd5b815161041f81610f1f565b8381526001600160a01b038316602082015260606040820181905260009061168a90830184611097565b95945050505050565b600080604083850312156116a657600080fd5b505080516020909101519092909150565b600080604083850312156116ca57600080fd5b82356116d581610f1f565b9150602083013567ffffffffffffffff8111156116f157600080fd5b6116fd85828601611599565b9150509250929050565b8281526040602082015260006112fa604083018461109756fea2646970667358221220d21b9071fc89743d7274fb2dc5e40ec4802c49c9ec33ece635c24cdcd6ed4dc564736f6c63430008150033";

type SubscribeActionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SubscribeActionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SubscribeAction__factory extends ContractFactory {
  constructor(...args: SubscribeActionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    actionConfig: string,
    collectAction: string,
    monetizer: string,
    overrides?: Overrides & { from?: string }
  ): Promise<SubscribeAction> {
    return super.deploy(
      actionConfig,
      collectAction,
      monetizer,
      overrides || {}
    ) as Promise<SubscribeAction>;
  }
  override getDeployTransaction(
    actionConfig: string,
    collectAction: string,
    monetizer: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      actionConfig,
      collectAction,
      monetizer,
      overrides || {}
    );
  }
  override attach(address: string): SubscribeAction {
    return super.attach(address) as SubscribeAction;
  }
  override connect(signer: Signer): SubscribeAction__factory {
    return super.connect(signer) as SubscribeAction__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SubscribeActionInterface {
    return new utils.Interface(_abi) as SubscribeActionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SubscribeAction {
    return new Contract(address, _abi, signerOrProvider) as SubscribeAction;
  }
}
