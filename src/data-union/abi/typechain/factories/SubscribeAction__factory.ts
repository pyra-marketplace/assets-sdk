/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SubscribeAction,
  SubscribeActionInterface,
} from "../SubscribeAction";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "actionConfig",
        type: "address",
      },
      {
        internalType: "address",
        name: "collectAction",
        type: "address",
      },
      {
        internalType: "address",
        name: "monetizer",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CollectTokenNotEnumberable",
    type: "error",
  },
  {
    inputs: [],
    name: "CollectTokenNotOwned",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMonetizer",
    type: "error",
  },
  {
    inputs: [],
    name: "NotCollected",
    type: "error",
  },
  {
    inputs: [],
    name: "NotSubscribeModule",
    type: "error",
  },
  {
    inputs: [],
    name: "SubscribeModuleAlreadyRegistered",
    type: "error",
  },
  {
    inputs: [],
    name: "SubscribeModuleNotRegistered",
    type: "error",
  },
  {
    inputs: [],
    name: "ACTION_CONFIG",
    outputs: [
      {
        internalType: "contract ActionConfig",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "COLLECT_ACTION",
    outputs: [
      {
        internalType: "contract CollectAction",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "assetId",
        type: "bytes32",
      },
    ],
    name: "getDappTreasuryData",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProtocolTreasuryData",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "assetId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "collectionId",
        type: "uint256",
      },
    ],
    name: "getSubscribeData",
    outputs: [
      {
        internalType: "uint256[2][]",
        name: "",
        type: "uint256[2][]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "assetId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "initializeAction",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "assetId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "collectionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "isAccessible",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "assetId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "isAccessible",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isSubscribeModuleRegistered",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "monetizer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "assetId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "subscriber",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "processAction",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "subscribeModule",
        type: "address",
      },
    ],
    name: "registerSubscribeModule",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type SubscribeActionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SubscribeActionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SubscribeAction__factory extends ContractFactory {
  constructor(...args: SubscribeActionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    actionConfig: string,
    collectAction: string,
    monetizer: string,
    overrides?: Overrides & { from?: string }
  ): Promise<SubscribeAction> {
    return super.deploy(
      actionConfig,
      collectAction,
      monetizer,
      overrides || {}
    ) as Promise<SubscribeAction>;
  }
  override getDeployTransaction(
    actionConfig: string,
    collectAction: string,
    monetizer: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      actionConfig,
      collectAction,
      monetizer,
      overrides || {}
    );
  }
  override attach(address: string): SubscribeAction {
    return super.attach(address) as SubscribeAction;
  }
  override connect(signer: Signer): SubscribeAction__factory {
    return super.connect(signer) as SubscribeAction__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SubscribeActionInterface {
    return new utils.Interface(_abi) as SubscribeActionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SubscribeAction {
    return new Contract(address, _abi, signerOrProvider) as SubscribeAction;
  }
}
