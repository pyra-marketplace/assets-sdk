/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { LitACL, LitACLInterface } from "../LitACL";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "dataUnion",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "DATA_UNION",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "dataUnionId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "subscriber",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "isAccessible",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516106da3803806106da83398101604081905261002f91610067565b6001600160a01b0381166100565760405163d92e233d60e01b815260040160405180910390fd5b6001600160a01b0316608052610097565b60006020828403121561007957600080fd5b81516001600160a01b038116811461009057600080fd5b9392505050565b60805161061c6100be6000396000818160400152818160c501526102d0015261061c6000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80634a1414201461003b578063c0e26b4e1461007f575b600080fd5b6100627f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b61009261008d366004610391565b6100a2565b6040519015158152602001610076565b604051633131b3ad60e11b81526004810184905260009081906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636263675a90602401600060405180830381865afa15801561010c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101349190810190610449565b9050600081608001516001600160a01b031663e1e4818b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561017a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019e9190610567565b90506001600160a01b0381166101b957600092505050610372565b6040516370a0823160e01b81526001600160a01b038681166004830152600091908316906370a0823190602401602060405180830381865afa158015610203573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102279190610584565b905060005b8181101561036957604051632f745c5960e01b81526001600160a01b0388811660048301526024820183905260009190851690632f745c5990604401602060405180830381865afa158015610285573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a99190610584565b604051630efed36760e11b8152600481018b905260248101829052604481018990529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690631dfda6ce90606401602060405180830381865afa15801561031f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610343919061059d565b1561035657600195505050505050610372565b5080610361816105bf565b91505061022c565b50600093505050505b9392505050565b6001600160a01b038116811461038e57600080fd5b50565b6000806000606084860312156103a657600080fd5b8335925060208401356103b881610379565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715610402576104026103c9565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610431576104316103c9565b604052919050565b805161044481610379565b919050565b6000602080838503121561045c57600080fd5b825167ffffffffffffffff8082111561047457600080fd5b9084019060c0828703121561048857600080fd5b6104906103df565b82518152838301518482015260408301516104aa81610379565b60408201526060830151828111156104c157600080fd5b8301601f810188136104d257600080fd5b8051838111156104e4576104e46103c9565b6104f6601f8201601f19168701610408565b9350808452888682840101111561050c57600080fd5b60005b8181101561052a57828101870151858201880152860161050f565b506000868286010152505081606082015261054760808401610439565b608082015261055860a08401610439565b60a08201529695505050505050565b60006020828403121561057957600080fd5b815161037281610379565b60006020828403121561059657600080fd5b5051919050565b6000602082840312156105af57600080fd5b8151801515811461037257600080fd5b6000600182016105df57634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220c866726f49bc35e7ec8a209ed62a71d9d7cfa91f22c7ca14d6b4e5ec6095724464736f6c63430008150033";

type LitACLConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LitACLConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LitACL__factory extends ContractFactory {
  constructor(...args: LitACLConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    dataUnion: string,
    overrides?: Overrides & { from?: string }
  ): Promise<LitACL> {
    return super.deploy(dataUnion, overrides || {}) as Promise<LitACL>;
  }
  override getDeployTransaction(
    dataUnion: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(dataUnion, overrides || {});
  }
  override attach(address: string): LitACL {
    return super.attach(address) as LitACL;
  }
  override connect(signer: Signer): LitACL__factory {
    return super.connect(signer) as LitACL__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LitACLInterface {
    return new utils.Interface(_abi) as LitACLInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): LitACL {
    return new Contract(address, _abi, signerOrProvider) as LitACL;
  }
}
